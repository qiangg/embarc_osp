<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="axc003__gpio_8c" kind="file">
    <compoundname>axc003_gpio.c</compoundname>
    <includes refid="arc_8h" local="yes">arc.h</includes>
    <includes refid="arc__builtin_8h" local="yes">arc_builtin.h</includes>
    <includes refid="emb_a_r_c__toolchain_8h" local="yes">embARC_toolchain.h</includes>
    <includes refid="emb_a_r_c__error_8h" local="yes">embARC_error.h</includes>
    <includes refid="dw__gpio_8h" local="yes">dw_gpio.h</includes>
    <includes refid="axc003__gpio_8h" local="yes">axc003_gpio.h</includes>
    <includes refid="axs__hardware_8h" local="yes">axs_hardware.h</includes>
    <incdepgraph>
      <node id="650">
        <label>stdbool.h</label>
      </node>
      <node id="659">
        <label>axs_103_interrupt.h</label>
        <link refid="axs__103__interrupt_8h"/>
      </node>
      <node id="658">
        <label>axs_hardware.h</label>
        <link refid="axs__hardware_8h"/>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
      </node>
      <node id="643">
        <label>arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="657">
        <label>../../drivers/ip/designware/gpio/dw_gpio_obj.h</label>
        <link refid="axs_2drivers_2ip_2designware_2gpio_2dw__gpio__obj_8h"/>
        <childnode refid="652" relation="include">
        </childnode>
      </node>
      <node id="653">
        <label>dev_gpio.h</label>
        <link refid="dev__gpio_8h"/>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="647">
        <label>stdint.h</label>
      </node>
      <node id="645">
        <label>arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
      </node>
      <node id="649">
        <label>stddef.h</label>
      </node>
      <node id="654">
        <label>dev_common.h</label>
        <link refid="dev__common_8h"/>
        <childnode refid="647" relation="include">
        </childnode>
      </node>
      <node id="648">
        <label>limits.h</label>
      </node>
      <node id="642">
        <label>axc003_gpio.c</label>
        <link refid="axc003_gpio.c"/>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>axc003_gpio.h</label>
        <link refid="axc003__gpio_8h"/>
        <childnode refid="657" relation="include">
        </childnode>
      </node>
      <node id="644">
        <label>arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="655">
        <label>arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
      </node>
      <node id="646">
        <label>embARC_toolchain.h</label>
        <link refid="emb_a_r_c__toolchain_8h"/>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
      </node>
      <node id="651">
        <label>embARC_error.h</label>
        <link refid="emb_a_r_c__error_8h"/>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
      </node>
      <node id="652">
        <label>dw_gpio.h</label>
        <link refid="dw__gpio_8h"/>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga4c3fa468dd6f71c498f995c30be6949d" prot="public" static="no">
        <name>AXC003_GPIO_CHECK_EXP_NORTN</name>
        <param><defname>EXPR</defname></param>
        <initializer><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga77484b978195f1cc0b1e094fd7f085e6" kindref="member">CHECK_EXP_NOERCD</ref>(EXPR, error_exit)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="66" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gac84e497c43ab01f64f67691a9873a7bc" prot="public" static="yes" mutable="no">
        <type><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gab39bda9a6b6726d0ccccc7b4742d9d27" kindref="member">DEV_GPIO</ref> *</type>
        <definition>DEV_GPIO* leda_port</definition>
        <argsstring></argsstring>
        <name>leda_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="61" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga047287fa7d1b7dde8e0f703b14b4ff89" prot="public" static="yes" mutable="no">
        <type><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gab39bda9a6b6726d0ccccc7b4742d9d27" kindref="member">DEV_GPIO</ref> *</type>
        <definition>DEV_GPIO* ledb_port</definition>
        <argsstring></argsstring>
        <name>ledb_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="62" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga446b332910ff036cfbf7d3f5e4e4776f" prot="public" static="yes" mutable="no">
        <type><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gab39bda9a6b6726d0ccccc7b4742d9d27" kindref="member">DEV_GPIO</ref> *</type>
        <definition>DEV_GPIO* button_port</definition>
        <argsstring></argsstring>
        <name>button_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="63" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gaa0de6698653927065ec2257fd16685df" prot="public" static="yes" mutable="no">
        <type><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1gab39bda9a6b6726d0ccccc7b4742d9d27" kindref="member">DEV_GPIO</ref> *</type>
        <definition>DEV_GPIO* seven_seg_port</definition>
        <argsstring></argsstring>
        <name>seven_seg_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="64" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga55ff886c1dfa08ecd58b1f85cdc2edb4" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t num_to_7seg_table[10]</definition>
        <argsstring>[10]</argsstring>
        <name>num_to_7seg_table</name>
        <initializer>= {
	0x3f, 
	0x06, 
	0x5B, 
	0x4F, 
	0x66, 
	0x6D, 
	0x7D, 
	0x07, 
	0x7F, 
	0x6F 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="171" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga458834f7b436dda8ba0dfa15cd302596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void axc003_gpio_init</definition>
        <argsstring>(void)</argsstring>
        <name>axc003_gpio_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>axc003 on board gpio init </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="69" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="69" bodyend="87"/>
        <references refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" compoundref="axs_2drivers_2ip_2designware_2gpio_2dw__gpio__obj_8c" startline="191" endline="212">gpio_get_dev</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga5127296ba57626bc984aa48d6ee5f010" compoundref="dev__gpio_8h" startline="419">dev_gpio::gpio_open</references>
        <references refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gae3ae9c28ab249bbd265e14e9bc1ae639" compoundref="axc003__gpio_8c" startline="90" endline="105">leda_write</references>
        <references refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga40eb42f17565d2858707a521c35d7040" compoundref="axc003__gpio_8c" startline="110" endline="121">ledb_write</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s__103_1ga6609ed8941af83902dd542ce6963405d" compoundref="axs__103__init_8c" startline="54" endline="58">axs_hardware_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gae3ae9c28ab249bbd265e14e9bc1ae639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void leda_write</definition>
        <argsstring>(uint32_t led_val, uint32_t mask)</argsstring>
        <name>leda_write</name>
        <param>
          <type>uint32_t</type>
          <declname>led_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>write 1 to light on led bit, else light off led </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="90" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="90" bodyend="105"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" compoundref="dev__gpio_8h" startline="422">dev_gpio::gpio_write</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga458834f7b436dda8ba0dfa15cd302596" compoundref="axc003__gpio_8c" startline="69" endline="87">axc003_gpio_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga40eb42f17565d2858707a521c35d7040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ledb_write</definition>
        <argsstring>(uint32_t led_val, uint32_t mask)</argsstring>
        <name>ledb_write</name>
        <param>
          <type>uint32_t</type>
          <declname>led_val</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>write 1 to light on led bit, else light off led </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="110" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="110" bodyend="121"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" compoundref="dev__gpio_8h" startline="422">dev_gpio::gpio_write</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga458834f7b436dda8ba0dfa15cd302596" compoundref="axc003__gpio_8c" startline="69" endline="87">axc003_gpio_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga1321d1f2d3e39b23315285b52acd0852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t button_read</definition>
        <argsstring>(uint32_t mask)</argsstring>
        <name>button_read</name>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
<para>Press down bit set to 1 else 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="124" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="124" bodyend="138"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga0583a36e5d0aab4bd914c34bb44832c9" compoundref="dev__gpio_8h" startline="423">dev_gpio::gpio_read</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga7be27fed65a2a56ebc0bccdc3e8a02fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void button_install_isr</definition>
        <argsstring>(uint32_t offset, void(*isr_ptr)(void *ptr))</argsstring>
        <name>button_install_isr</name>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>void(*)(void *ptr)</type>
          <declname>isr_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="140" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="140" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga94b2557a37827d7b971b7475cf8e62f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void seven_seg_write</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>seven_seg_write</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" line="184" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c" bodystart="184" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>all on axc003 board gpio device init and operate functions </para>    </briefdescription>
    <detaileddescription>
<para>this gpio devices are button, led,7-segment display </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">---------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arc_8h" kindref="compound">arc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arc__builtin_8h" kindref="compound">arc_builtin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emb_a_r_c__toolchain_8h" kindref="compound">embARC_toolchain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emb_a_r_c__error_8h" kindref="compound">embARC_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__gpio_8h" kindref="compound">dw_gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="axc003__gpio_8h" kindref="compound">axc003_gpio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="axs__hardware_8h" kindref="compound">axs_hardware.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*leda_port;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*ledb_port;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*button_port;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*seven_seg_port;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AXC003_GPIO_CHECK_EXP_NORTN(EXPR)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EXP_NOERCD(EXPR,<sp/>error_exit)</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="69" refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga458834f7b436dda8ba0dfa15cd302596" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga458834f7b436dda8ba0dfa15cd302596" kindref="member">axc003_gpio_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*<sp/>port_ptr;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(CPU_DW_GPIO_PORT_A);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga5127296ba57626bc984aa48d6ee5f010" kindref="member">gpio_open</ref>(CPU_POARTA_DIR);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(CPU_DW_GPIO_PORT_B);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga5127296ba57626bc984aa48d6ee5f010" kindref="member">gpio_open</ref>(CPU_PORTB_DIR);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leda_port<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(AXC003_LEDA_PORT);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ledb_port<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(AXC003_LEDB_PORT);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_port<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(AXC003_BUTTON_PORT);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seven_seg_port<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(AXC003_7SEG_PORT);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seven_seg_write(10);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gae3ae9c28ab249bbd265e14e9bc1ae639" kindref="member">leda_write</ref>(0xAA,<sp/>0xAA);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga40eb42f17565d2858707a521c35d7040" kindref="member">ledb_write</ref>(0x55,<sp/>0x55);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gae3ae9c28ab249bbd265e14e9bc1ae639" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1gae3ae9c28ab249bbd265e14e9bc1ae639" kindref="member">leda_write</ref>(uint32_t<sp/>led_val,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXC003_GPIO_CHECK_EXP_NORTN(leda_port<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_val<sp/>=<sp/>(led_val<sp/>&amp;<sp/>0x3)<sp/>|<sp/>((led_val<sp/>&amp;<sp/>0xC)<sp/>&lt;&lt;<sp/>0x3)<sp/>|<sp/>((led_val<sp/>&amp;<sp/>0x30)<sp/>&lt;&lt;<sp/>0x6)<sp/>|</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((led_val<sp/>&amp;<sp/>0xC0)<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&amp;<sp/>0x3)<sp/>|<sp/>((mask<sp/>&amp;<sp/>0xC)<sp/>&lt;&lt;<sp/>0x3)<sp/>|<sp/>((mask<sp/>&amp;<sp/>0x30)<sp/>&lt;&lt;<sp/>0x6)<sp/>|</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((mask<sp/>&amp;<sp/>0xC0)<sp/>&lt;&lt;<sp/>9);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leda_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" kindref="member">gpio_write</ref>(led_val,<sp/>mask);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga40eb42f17565d2858707a521c35d7040" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga40eb42f17565d2858707a521c35d7040" kindref="member">ledb_write</ref>(uint32_t<sp/>led_val,<sp/>uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXC003_GPIO_CHECK_EXP_NORTN(ledb_port<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_val<sp/>&amp;=<sp/>mask;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>led_val<sp/>=<sp/>led_val<sp/>&lt;&lt;<sp/>AXC003_LEDB_OFFSET;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&lt;&lt;<sp/>AXC003_LEDB_OFFSET)<sp/>&amp;<sp/>AXC003_LEDB_MASK;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ledb_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" kindref="member">gpio_write</ref>(led_val,<sp/>mask);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga1321d1f2d3e39b23315285b52acd0852" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s___a_x_c003___d_r_v___g_p_i_o_1ga1321d1f2d3e39b23315285b52acd0852" kindref="member">button_read</ref>(uint32_t<sp/>mask)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>value;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXC003_GPIO_CHECK_EXP_NORTN(button_port<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(mask<sp/>&lt;&lt;<sp/>AXC003_BUTTON_OFFSET)<sp/>&amp;<sp/>AXC003_BUTTON_MASK;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga0583a36e5d0aab4bd914c34bb44832c9" kindref="member">gpio_read</ref>(&amp;value,<sp/>mask);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>(~value)<sp/>&amp;<sp/>mask;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&gt;&gt;<sp/>AXC003_BUTTON_OFFSET);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>button_install_isr(uint32_t<sp/>offset,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*isr_ptr)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr))</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>note:<sp/>CPU<sp/>card&apos;s<sp/>creg<sp/>ctrl&apos;s<sp/>gpio<sp/>int<sp/>source<sp/>to<sp/>INTNO_ICTL_MB,</highlight></codeline>
<codeline lineno="144"><highlight class="comment">default<sp/>is<sp/>A12<sp/>which<sp/>is<sp/>int<sp/>request<sp/>from<sp/>main<sp/>board,<sp/>int<sp/>request<sp/>from<sp/>SW2504-SW2507<sp/>can<sp/>not</highlight></codeline>
<codeline lineno="145"><highlight class="comment">go<sp/>to<sp/>INTNO_ICTL_MB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio__bit__isr" kindref="compound">DEV_GPIO_BIT_ISR</ref><sp/>bit_isr;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio__int__cfg" kindref="compound">DEV_GPIO_INT_CFG</ref><sp/>int_cfg;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>mask;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(offset<sp/>&lt;<sp/>AXC003_BUTTON_SW2504_OFFSET<sp/>||<sp/>offset<sp/>&gt;<sp/>AXC003_BUTTON_SW2507_OFFSET)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXC003_GPIO_CHECK_EXP_NORTN(button_port<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>(0x1<sp/>&lt;&lt;<sp/>offset);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1abd8f09f3ae841c70f4eac7996b131ba3" kindref="member">int_bit_mask</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1a3fc775dfe0535f3009cdc177411625c3" kindref="member">int_bit_type</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1gac1a52e3e3d19344614b2381e28ef79e9" kindref="member">GPIO_INT_BITS_EDGE_TRIG</ref>(mask);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1a1cb57db4fecc7b34137972ff05a3ecc5" kindref="member">int_bit_polarity</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1gae68592bdef50959dd12d339ac9532b14" kindref="member">GPIO_INT_BITS_POL_FALL_EDGE</ref>(mask);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1aceb9fb6c9a83d3d2a511cf63f87c3fda" kindref="member">int_bit_debounce</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1ga4f127cfd02bd48f0bad684565ddf50e8" kindref="member">GPIO_INT_BITS_ENA_DEBOUNCE</ref>(mask);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1gada822221fb039eb5549af98e8c88ce9b" kindref="member">GPIO_CMD_SET_BIT_INT_CFG</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;int_cfg));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_isr.<ref refid="structdev__gpio__bit__isr_1ac46b214e96ed33acaa2394e2fb75fe34" kindref="member">int_bit_ofs</ref><sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_isr.<ref refid="structdev__gpio__bit__isr_1a4c3106c9eedd78f6b1dec60069db08b6" kindref="member">int_bit_handler</ref><sp/>=<sp/>isr_ptr;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1gad43d27e0971a8cbca838dc69af2639a7" kindref="member">GPIO_CMD_SET_BIT_ISR</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;bit_isr));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>button_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1ga0dc3ba08f56ab2c5ca64e4beab70fed5" kindref="member">GPIO_CMD_ENA_BIT_INT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)mask);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>num_to_7seg_table[10]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3f,<sp/></highlight><highlight class="comment">//<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x06,<sp/></highlight><highlight class="comment">//<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x5B,<sp/></highlight><highlight class="comment">//<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x4F,<sp/></highlight><highlight class="comment">//<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x66,<sp/></highlight><highlight class="comment">//<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x6D,<sp/></highlight><highlight class="comment">//<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7D,<sp/></highlight><highlight class="comment">//<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x07,<sp/></highlight><highlight class="comment">//<sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7F,<sp/></highlight><highlight class="comment">//<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x6F<sp/></highlight><highlight class="comment">//<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>seven_seg_write(uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>digit;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AXC003_GPIO_CHECK_EXP_NORTN(seven_seg_port<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&gt;<sp/>99)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>can<sp/>show<sp/><sp/>val<sp/>&lt;<sp/>99,<sp/>two<sp/>7-seg<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digit<sp/>=<sp/>num_to_7seg_table[val<sp/>/<sp/>10]<sp/>|<sp/><sp/>(num_to_7seg_table[val<sp/>%<sp/>10]<sp/>&lt;&lt;<sp/>8);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seven_seg_port-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga70bd322128648796b6652e4026a2eb91" kindref="member">gpio_write</ref>((digit<sp/>&lt;&lt;<sp/>AXC003_7SEG_OFFSET),<sp/>AXC003_7SEG_MASK);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axc003_gpio.c"/>
  </compounddef>
</doxygen>
