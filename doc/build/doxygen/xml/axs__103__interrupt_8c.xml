<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="axs__103__interrupt_8c" kind="file">
    <compoundname>axs_103_interrupt.c</compoundname>
    <includes refid="emb_a_r_c_8h" local="yes">embARC.h</includes>
    <includes refid="axs__103__interrupt_8h" local="yes">axs_103_interrupt.h</includes>
    <incdepgraph>
      <node id="725">
        <label>stdbool.h</label>
      </node>
      <node id="719">
        <label>axs_103_interrupt.c</label>
        <link refid="axs_103_interrupt.c"/>
        <childnode refid="720" relation="include">
        </childnode>
        <childnode refid="744" relation="include">
        </childnode>
      </node>
      <node id="744">
        <label>axs_103_interrupt.h</label>
        <link refid="axs__103__interrupt_8h"/>
      </node>
      <node id="736">
        <label>arc_mpu.h</label>
        <link refid="arc__mpu_8h_source"/>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
      <node id="739">
        <label>console_io.h</label>
      </node>
      <node id="729">
        <label>arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="730" relation="include">
        </childnode>
      </node>
      <node id="743">
        <label>ntshell_task.h</label>
      </node>
      <node id="722">
        <label>stdint.h</label>
      </node>
      <node id="727">
        <label>arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="720">
        <label>embARC.h</label>
        <link refid="emb_a_r_c_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="728" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="733" relation="include">
        </childnode>
        <childnode refid="736" relation="include">
        </childnode>
        <childnode refid="737" relation="include">
        </childnode>
        <childnode refid="738" relation="include">
        </childnode>
        <childnode refid="739" relation="include">
        </childnode>
        <childnode refid="740" relation="include">
        </childnode>
        <childnode refid="741" relation="include">
        </childnode>
        <childnode refid="742" relation="include">
        </childnode>
        <childnode refid="743" relation="include">
        </childnode>
      </node>
      <node id="735">
        <label>arc_udma_config.h</label>
        <link refid="arc__udma__config_8h"/>
        <childnode refid="730" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="733">
        <label>arc_udma.h</label>
        <link refid="arc__udma_8h"/>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="734" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="732" relation="include">
        </childnode>
        <childnode refid="735" relation="include">
        </childnode>
      </node>
      <node id="724">
        <label>stddef.h</label>
      </node>
      <node id="738">
        <label>os_hal_inc.h</label>
        <link refid="os__hal__inc_8h"/>
      </node>
      <node id="742">
        <label>diskio.h</label>
      </node>
      <node id="723">
        <label>limits.h</label>
      </node>
      <node id="734">
        <label>string.h</label>
      </node>
      <node id="737">
        <label>board.h</label>
        <link refid="board_8h"/>
      </node>
      <node id="728">
        <label>arc_timer.h</label>
        <link refid="arc__timer_8h"/>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="730">
        <label>arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="731">
        <label>arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
      <node id="740">
        <label>xprintf.h</label>
      </node>
      <node id="732">
        <label>arc_cache.h</label>
        <link refid="arc__cache_8h"/>
        <childnode refid="721" relation="include">
        </childnode>
        <childnode refid="729" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
        <childnode refid="731" relation="include">
        </childnode>
      </node>
      <node id="741">
        <label>ff.h</label>
      </node>
      <node id="721">
        <label>embARC_toolchain.h</label>
        <link refid="emb_a_r_c__toolchain_8h"/>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="723" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>embARC_error.h</label>
        <link refid="emb_a_r_c__error_8h"/>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="727" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structdw__ictl__reg" prot="public">dw_ictl_reg</innerclass>
    <innerclass refid="structictl__gpio__reg" prot="public">ictl_gpio_reg</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga7b999b21e7277a252a979dbbb1bb7ca3" prot="public" static="no">
        <type>struct <ref refid="structdw__ictl__reg" kindref="compound">dw_ictl_reg</ref></type>
        <definition>typedef volatile struct dw_ictl_reg  DW_ICTL_REG</definition>
        <argsstring></argsstring>
        <name>DW_ICTL_REG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="68" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga29ffa72bee9328242dfb332ea98eff73" prot="public" static="no">
        <type>struct <ref refid="structdw__ictl__reg" kindref="compound">dw_ictl_reg</ref> *</type>
        <definition>typedef volatile struct dw_ictl_reg * DW_ICTL_REG_PTR</definition>
        <argsstring></argsstring>
        <name>DW_ICTL_REG_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="68" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gacdf627caf024f59181a4cd7d8291860b" prot="public" static="no">
        <type>struct <ref refid="structictl__gpio__reg" kindref="compound">ictl_gpio_reg</ref></type>
        <definition>typedef volatile struct ictl_gpio_reg  ICTL_GPIO_REG</definition>
        <argsstring></argsstring>
        <name>ICTL_GPIO_REG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="80" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga48818465472230a3c5c712f5a706c32b" prot="public" static="no">
        <type>struct <ref refid="structictl__gpio__reg" kindref="compound">ictl_gpio_reg</ref> *</type>
        <definition>typedef volatile struct ictl_gpio_reg * ICTL_GPIO_REG_PTR</definition>
        <argsstring></argsstring>
        <name>ICTL_GPIO_REG_PTR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="80" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga8face2f1845569d59f3f8e51c258fb65" prot="public" static="yes" mutable="no">
        <type>ICTL_GPIO_REG_PTR</type>
        <definition>ICTL_GPIO_REG_PTR ictl_gpio_ptr</definition>
        <argsstring></argsstring>
        <name>ictl_gpio_ptr</name>
        <initializer>= (ICTL_GPIO_REG_PTR)(REGBASE_ICTL_CPU)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="205" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga90ea332a58293e351f708dbd9db81e8e" prot="public" static="yes" mutable="no">
        <type>DW_ICTL_REG_PTR</type>
        <definition>DW_ICTL_REG_PTR dw_ictl_ptr</definition>
        <argsstring></argsstring>
        <name>dw_ictl_ptr</name>
        <initializer>= (DW_ICTL_REG_PTR)(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga587e5daf95ade87cf53443e93b416e06" kindref="member">REGBASE_ICTL</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="206" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga2f245ab05f52764487fe2ece2f6cc2e1" prot="public" static="yes" mutable="no">
        <type><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref></type>
        <definition>INT_HANDLER axs_103_int_handler_table[NUM_INT_ALL]</definition>
        <argsstring>[NUM_INT_ALL]</argsstring>
        <name>axs_103_int_handler_table</name>
        <initializer>= {
	[0 ... NUM_INT_ALL-1] = axs_103_int_handler_default
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="207" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga2d2cf53c58db7e3364d58a33b0dfc79b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_ictl_int_enable</definition>
        <argsstring>(DW_ICTL_REG_PTR reg, uint32_t intno)</argsstring>
        <name>dw_ictl_int_enable</name>
        <param>
          <type>DW_ICTL_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="83" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="83" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga3d65b7f551859a60bac7c431a3c08d40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_ictl_int_disable</definition>
        <argsstring>(DW_ICTL_REG_PTR reg, uint32_t intno)</argsstring>
        <name>dw_ictl_int_disable</name>
        <param>
          <type>DW_ICTL_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="92" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaea90167e64343eed2f15ab55cfde2565" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t dw_ictl_int_enabled</definition>
        <argsstring>(DW_ICTL_REG_PTR reg, uint32_t intno)</argsstring>
        <name>dw_ictl_int_enabled</name>
        <param>
          <type>DW_ICTL_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="101" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="101" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaeda3435823ac575060870ddc7c0b41c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t dw_ictl_int_probe</definition>
        <argsstring>(DW_ICTL_REG_PTR reg, uint32_t intno)</argsstring>
        <name>dw_ictl_int_probe</name>
        <param>
          <type>DW_ICTL_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="113" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="113" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga0eb7d2ad5dbe49a20e3d0eb3fe820343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_ictl_int_sw_trigger</definition>
        <argsstring>(DW_ICTL_REG_PTR reg, uint32_t intno)</argsstring>
        <name>dw_ictl_int_sw_trigger</name>
        <param>
          <type>DW_ICTL_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="127" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gafa805f19e4aca3791fdc12484fae32b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ictl_gpio_int_enable</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno)</argsstring>
        <name>ictl_gpio_int_enable</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="133" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="133" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga22a0ac16f4ae109675da62b13b1f97cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ictl_gpio_int_disable</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno)</argsstring>
        <name>ictl_gpio_int_disable</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="142" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="142" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gae38b988fc7fd425139db5ff6ab66a316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ictl_gpio_int_enabled</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno)</argsstring>
        <name>ictl_gpio_int_enabled</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="151" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="151" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga7d7fc0153dab026138c055bec4e97e49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t ictl_gpio_int_probe</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno)</argsstring>
        <name>ictl_gpio_int_probe</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="163" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="163" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga198531ae92d20c1cf114cca6d569b6b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ictl_gpio_int_level_config</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno, uint32_t level)</argsstring>
        <name>ictl_gpio_int_level_config</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="176" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="176" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gacf9f84c2c115421c2620a0cad8a32428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ictl_gpio_int_polarity_config</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno, uint32_t polarity)</argsstring>
        <name>ictl_gpio_int_polarity_config</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>polarity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="185" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="185" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga63fd3031b8dc46dc6d6cabc3f5a79760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ictl_gpio_int_clear</definition>
        <argsstring>(ICTL_GPIO_REG_PTR reg, uint32_t intno)</argsstring>
        <name>ictl_gpio_int_clear</name>
        <param>
          <type>ICTL_GPIO_REG_PTR</type>
          <declname>reg</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="194" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga3b40672e5a70df6fd103fbdc0e729c27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void axs_103_int_handler_default</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>axs_103_int_handler_default</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="199" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="199" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga52dd271e68aa6a0cff66d469d8851e4a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_ictl_int_isr</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>dw_ictl_int_isr</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="212" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="212" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga4f6ec610160ca6d77613b9d645d5ac87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void ictl_gpio_int_isr</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>ictl_gpio_int_isr</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="226" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="226" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_disable</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_disable</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>disable the specific interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="246" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="246" bodyend="264"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga7ea1ab5796daaeb7d65cc4de131c9645" compoundref="arc__exception_8h" startline="258" endline="262">arc_int_disable</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_enable</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_enable</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>enable the specific int </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="271" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="271" bodyend="289"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga98018d89487c4a101cc3d8b9a9dd0d09" compoundref="arc__exception_8h" startline="269" endline="273">arc_int_enable</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga7f54b17cdd6f65442850e1bdcf10c272" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_enabled</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_enabled</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>check whether the specific int is enabled </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 disabled, 1 enabled, &lt; 0 error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="297" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="297" bodyend="312"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gab1fe93dc449f5f596d7c75cdcf286662" compoundref="arc__exception_8h" startline="281" endline="285">arc_int_enabled</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga653e2bfd8567c76dc56578aad0585517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_ipm_get</definition>
        <argsstring>(void)</argsstring>
        <name>int_ipm_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>get the interrupt priority mask </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>interrupt priority mask, negative num </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="319" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="319" bodyend="322"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gafc367ad224f3067044adddb9ab681756" compoundref="arc__exception_8h" startline="292" endline="295">arc_int_ipm_get</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" compoundref="arc__exception_8h" startline="249">INT_PRI_MIN</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab54915b2976f68cc96681374cbd0f023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_ipm_set</definition>
        <argsstring>(int32_t intpri)</argsstring>
        <name>int_ipm_set</name>
        <param>
          <type>int32_t</type>
          <declname>intpri</declname>
        </param>
        <briefdescription>
<para>set the interrupt priority mask </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intpri</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt priority </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="330" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="330" bodyend="339"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gac20e565773ce277ba5d9595d4e49c509" compoundref="arc__exception_8h" startline="302" endline="310">arc_int_ipm_set</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gab0ae4780994cd452eef15ad91410d2fc" compoundref="arc__exception_8h" startline="252">INT_PRI_MAX</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" compoundref="arc__exception_8h" startline="249">INT_PRI_MIN</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga155d43c83556ee963e5291c8a25c1dc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_pri_get</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_pri_get</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>get current interrupt priority mask </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 interrupt priority, 0 error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="348" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="348" bodyend="363"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaa34e4f6a527ff4e9b1aa7a73297531ca" compoundref="arc__exception_8h" startline="317" endline="321">arc_int_pri_get</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" compoundref="arc__exception_8h" startline="249">INT_PRI_MIN</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab670f0f6729ebec51cc2de8f98c74a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_pri_set</definition>
        <argsstring>(const uint32_t intno, int32_t intpri)</argsstring>
        <name>int_pri_set</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>intpri</declname>
        </param>
        <briefdescription>
<para>set interrupt priority </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">intpri</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt priority </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="371" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="371" bodyend="390"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga02739d239aebbb7d771132ad4af193ba" compoundref="arc__exception_8h" startline="329" endline="333">arc_int_pri_set</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" compoundref="arc__exception_8h" startline="249">INT_PRI_MIN</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga9126c0df90c318b678022ab7b4d470c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_probe</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_probe</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>probe the pending status of interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 pending, 0 no pending, -1 error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="399" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="399" bodyend="414"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga13e2800d9c3013a911a0ff7bac05efca" compoundref="arc__exception_8h" startline="362" endline="366">arc_int_probe</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga136b8b6cdc3fd044879e2e3779041c3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_sw_trigger</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_sw_trigger</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>trigger the interrupt in software </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 ok, -1 error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="423" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="423" bodyend="440"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga17aa45afff4b827df337f4fcdc3d3423" compoundref="arc__exception_8h" startline="373" endline="376">arc_int_sw_trigger</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gafb4ee7c403bef57f56452190d13e93ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_level_config</definition>
        <argsstring>(const uint32_t intno, const uint32_t level)</argsstring>
        <name>int_level_config</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>config the interrupt level triggered or pulse triggered </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">level</parametername>
<parametername direction="in">0-level</parametername>
</parameternamelist>
<parameterdescription>
<para>trigger, 1-pluse triggered </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 ok, -1 error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="449" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="449" bodyend="466"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gac1b965dcd67b3051e8a6d43faa0811f0" compoundref="arc__exception_8h" startline="384" endline="388">arc_int_level_config</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga733e45f48f9fe46022e47acd9677d980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cpu_lock</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_lock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>lock cpu, disable interrupts </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="472" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="472" bodyend="475"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga0ad1316b54cc369a21190b8f2a79a008" compoundref="arc__exception_8h" startline="393" endline="397">arc_lock</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa93883b650c91f0e9b31a4cd6e935dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cpu_unlock</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_unlock</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>unlock cpu, enable interrupts to happen </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="480" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="480" bodyend="483"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga73ce913cce085be251cc92a2822db5e6" compoundref="arc__exception_8h" startline="402" endline="406">arc_unlock</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga8801f275b2a194a99f6d673a0e72cd32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cpu_lock_save</definition>
        <argsstring>(void)</argsstring>
        <name>cpu_lock_save</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>lock cpu and staus </para>        </briefdescription>
        <detaileddescription>
<para>lock cpu and return status</para><para><simplesect kind="return"><para>cpu status </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="490" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="490" bodyend="493"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga740985b8ca473a2a4060b87ecdeafac6" compoundref="arc__exception_8h" startline="427" endline="430">arc_lock_save</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gacb9f94a852339140f2d1d4ab8411c9c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cpu_unlock_restore</definition>
        <argsstring>(const uint32_t status)</argsstring>
        <name>cpu_unlock_restore</name>
        <param>
          <type>const uint32_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>unlock cpu with the specific status </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>cpu status saved by cpu_lock_save </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="500" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="500" bodyend="503"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga43d5a1597a3599dc8547a3f633369973" compoundref="arc__exception_8h" startline="437" endline="440">arc_unlock_restore</references>
      </memberdef>
      <memberdef kind="function" id="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t int_handler_install</definition>
        <argsstring>(const uint32_t intno, INT_HANDLER handler)</argsstring>
        <name>int_handler_install</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <param>
          <type><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref></type>
          <declname>handler</declname>
        </param>
        <briefdescription>
<para>install an interrupt handler </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">handler</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt handler to install </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="511" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="511" bodyend="528"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1gaeaafcc5805aba7e26781f3bcb537341d" compoundref="arc__exception_8c" startline="247" endline="255">exc_handler_install</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga22270fbfb25032dfab2ea10646130df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref></type>
        <definition>INT_HANDLER int_handler_get</definition>
        <argsstring>(const uint32_t intno)</argsstring>
        <name>int_handler_get</name>
        <param>
          <type>const uint32_t</type>
          <declname>intno</declname>
        </param>
        <briefdescription>
<para>get the installed an interrupt handler </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">intno</parametername>
</parameternamelist>
<parameterdescription>
<para>interrupt number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the installed interrupt handler or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="536" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="536" bodyend="551"/>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" compoundref="arc__exception_8h" startline="54">NUM_EXC_CPU</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1gad9d2ec7da142d48795b1e31af727b021" compoundref="arc__exception_8c" startline="263" endline="270">exc_handler_get</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" compoundref="axs__hardware_8h" startline="106">INTNO_ICTL_MB</references>
        <references refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" compoundref="axs__hardware_8h" startline="107">INTNO_ICTL_CPU</references>
      </memberdef>
      <memberdef kind="function" id="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga121b830f2c1850c73b251a5373252e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void axs_interrupt_init</definition>
        <argsstring>(void)</argsstring>
        <name>axs_interrupt_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" line="554" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c" bodystart="554" bodyend="577"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>to add </para>    </briefdescription>
    <detaileddescription>
<para>to add </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">---------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emb_a_r_c_8h" kindref="compound">embARC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="axs__103__interrupt_8h" kindref="compound">axs_103_interrupt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structdw__ictl__reg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdw__ictl__reg" kindref="compound">dw_ictl_reg</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ENABLE_L;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ENABLE_H;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>MASK_L;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>MASK_H;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>FORCE_L;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>FORCE_H;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>RAWSTATUS_L;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>RAWSTATUS_H;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>STATUS_L;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>STATUS_H;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>MASKSTATUS_L;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>MASKSTATUS_H;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>FINALSTATUS_L;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>FINALSTATUS_H;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>more<sp/>regs<sp/>to<sp/>be<sp/>added<sp/>according<sp/>to<sp/>dw_apb_ictl<sp/>databook<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/>DW_ICTL_REG,<sp/>*DW_ICTL_REG_PTR;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structictl__gpio__reg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structictl__gpio__reg" kindref="compound">ictl_gpio_reg</ref><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>reserved[12];</highlight></codeline>
<codeline lineno="72" refid="structictl__gpio__reg_1a0b97ee12d5dfe511b553a43ad5d9b424" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a0b97ee12d5dfe511b553a43ad5d9b424" kindref="member">INTEN</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73" refid="structictl__gpio__reg_1a3215cd02633159dcb75351decbc7d9fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a3215cd02633159dcb75351decbc7d9fb" kindref="member">INTMASK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="structictl__gpio__reg_1a431b9da6f2002d93bfaec89d0604e931" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a431b9da6f2002d93bfaec89d0604e931" kindref="member">INTTYPE_LEVEL</ref>;<sp/></highlight></codeline>
<codeline lineno="75" refid="structictl__gpio__reg_1a8171d50b47b2f51a4fe8cb0584d987b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a8171d50b47b2f51a4fe8cb0584d987b2" kindref="member">INT_POLARITY</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="structictl__gpio__reg_1a3d46f23c98a3964a736c48785021c511" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a3d46f23c98a3964a736c48785021c511" kindref="member">INTSTATUS</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="structictl__gpio__reg_1a82d1212d31198d3f3ebde9349a012ea0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1a82d1212d31198d3f3ebde9349a012ea0" kindref="member">RAW_INTSTATUS</ref>;<sp/></highlight></codeline>
<codeline lineno="78" refid="structictl__gpio__reg_1af037d67391e0c39bcd3a4af8081d7ba7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1af037d67391e0c39bcd3a4af8081d7ba7" kindref="member">DEBOUNCE</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="structictl__gpio__reg_1ae97cbecc300954cff0a2827ea3e8022d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structictl__gpio__reg_1ae97cbecc300954cff0a2827ea3e8022d" kindref="member">PORTA_EOI</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}<sp/>ICTL_GPIO_REG,<sp/>*ICTL_GPIO_REG_PTR;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_ictl_int_enable(DW_ICTL_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;ENABLE_L;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;ENABLE_L<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_ictl_int_disable(DW_ICTL_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;ENABLE_L;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;ENABLE_L<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">uint32_t<sp/>dw_ictl_int_enabled(DW_ICTL_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;ENABLE_L;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>intno))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">uint32_t<sp/>dw_ictl_int_probe(DW_ICTL_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;FINALSTATUS_L;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>intno))<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_ictl_int_sw_trigger(DW_ICTL_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;FORCE_L<sp/>=<sp/>(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_enable(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INTEN;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;INTEN<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_disable(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INTEN;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;INTEN<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">uint32_t<sp/>ictl_gpio_int_enabled(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INTEN;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>intno))<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal">uint32_t<sp/>ictl_gpio_int_probe(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INTSTATUS;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>intno))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_level_config(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno,<sp/>uint32_t<sp/>level)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INTTYPE_LEVEL;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>(level<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;INTTYPE_LEVEL<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_polarity_config(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno,<sp/>uint32_t<sp/>polarity)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>reg-&gt;INT_POLARITY;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>|=<sp/>(polarity<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;INT_POLARITY<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_clear(ICTL_GPIO_REG_PTR<sp/>reg,<sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg-&gt;PORTA_EOI<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>intno);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axs_103_int_handler_default(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>ptr;</highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ICTL_GPIO_REG_PTR<sp/>ictl_gpio_ptr<sp/>=<sp/>(ICTL_GPIO_REG_PTR)(REGBASE_ICTL_CPU);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>DW_ICTL_REG_PTR<sp/>dw_ictl_ptr<sp/>=<sp/>(DW_ICTL_REG_PTR)(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga587e5daf95ade87cf53443e93b416e06" kindref="member">REGBASE_ICTL</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref><sp/>axs_103_int_handler_table[NUM_INT_ALL]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0<sp/>...<sp/>NUM_INT_ALL-1]<sp/>=<sp/>axs_103_int_handler_default</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_ictl_int_isr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>dw_ictl_ptr-&gt;FINALSTATUS_L;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>ICTL_INTNO_NUM<sp/>;<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs_103_int_handler_table[i]((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)i);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ictl_gpio_int_isr(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>status;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ictl_gpio_ptr-&gt;INTSTATUS;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i<sp/>&lt;<sp/>ICTL_INTNO_NUM<sp/>;<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs_103_int_handler_table[i+ICTL_INTNO_NUM]((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)i);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" kindref="member">int_disable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga7ea1ab5796daaeb7d65cc4de131c9645" kindref="member">arc_int_disable</ref>(sub_intno);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw_ictl_int_disable(dw_ictl_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ictl_gpio_int_disable(ictl_gpio_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" kindref="member">int_enable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga98018d89487c4a101cc3d8b9a9dd0d09" kindref="member">arc_int_enable</ref>(sub_intno);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw_ictl_int_enable(dw_ictl_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ictl_gpio_int_enable(ictl_gpio_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga7f54b17cdd6f65442850e1bdcf10c272" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga7f54b17cdd6f65442850e1bdcf10c272" kindref="member">int_enabled</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gab1fe93dc449f5f596d7c75cdcf286662" kindref="member">arc_int_enabled</ref>(sub_intno);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dw_ictl_int_enabled(dw_ictl_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ictl_gpio_int_enabled(ictl_gpio_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga653e2bfd8567c76dc56578aad0585517" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga653e2bfd8567c76dc56578aad0585517" kindref="member">int_ipm_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((int32_t)<ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gafc367ad224f3067044adddb9ab681756" kindref="member">arc_int_ipm_get</ref>()<sp/>+<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>);</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab54915b2976f68cc96681374cbd0f023" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab54915b2976f68cc96681374cbd0f023" kindref="member">int_ipm_set</ref>(int32_t<sp/>intpri)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpri<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref><sp/>&amp;&amp;<sp/>intpri<sp/>&lt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gab0ae4780994cd452eef15ad91410d2fc" kindref="member">INT_PRI_MAX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intpri<sp/>=<sp/>intpri<sp/>-<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gac20e565773ce277ba5d9595d4e49c509" kindref="member">arc_int_ipm_set</ref>(intpri);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>-1;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga155d43c83556ee963e5291c8a25c1dc5" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga155d43c83556ee963e5291c8a25c1dc5" kindref="member">int_pri_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaa34e4f6a527ff4e9b1aa7a73297531ca" kindref="member">arc_int_pri_get</ref>(sub_intno)<sp/>+<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaa34e4f6a527ff4e9b1aa7a73297531ca" kindref="member">arc_int_pri_get</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref>)<sp/>+<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)<ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaa34e4f6a527ff4e9b1aa7a73297531ca" kindref="member">arc_int_pri_get</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref>)<sp/>+<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="371" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab670f0f6729ebec51cc2de8f98c74a40" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab670f0f6729ebec51cc2de8f98c74a40" kindref="member">int_pri_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno,<sp/>int32_t<sp/>intpri)</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intpri<sp/>=<sp/>intpri<sp/>-<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gaabc533409696b211335240a4140ae844" kindref="member">INT_PRI_MIN</ref>;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga02739d239aebbb7d771132ad4af193ba" kindref="member">arc_int_pri_set</ref>(sub_intno,<sp/>(uint32_t)intpri);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga02739d239aebbb7d771132ad4af193ba" kindref="member">arc_int_pri_set</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref>,<sp/>(uint32_t)intpri);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga02739d239aebbb7d771132ad4af193ba" kindref="member">arc_int_pri_set</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref>,<sp/>(uint32_t)intpri);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="399" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga9126c0df90c318b678022ab7b4d470c2" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga9126c0df90c318b678022ab7b4d470c2" kindref="member">int_probe</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="400"><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga13e2800d9c3013a911a0ff7bac05efca" kindref="member">arc_int_probe</ref>(sub_intno);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dw_ictl_int_probe(dw_ictl_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ictl_gpio_int_probe(ictl_gpio_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga136b8b6cdc3fd044879e2e3779041c3b" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga136b8b6cdc3fd044879e2e3779041c3b" kindref="member">int_sw_trigger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga17aa45afff4b827df337f4fcdc3d3423" kindref="member">arc_int_sw_trigger</ref>(sub_intno);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw_ictl_int_sw_trigger(dw_ictl_ptr,<sp/>sub_intno);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gafb4ee7c403bef57f56452190d13e93ec" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gafb4ee7c403bef57f56452190d13e93ec" kindref="member">int_level_config</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>level)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1gac1b965dcd67b3051e8a6d43faa0811f0" kindref="member">arc_int_level_config</ref>(sub_intno,<sp/>level);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ictl_gpio_int_level_config(ictl_gpio_ptr,<sp/>sub_intno,<sp/>level);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga733e45f48f9fe46022e47acd9677d980" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga733e45f48f9fe46022e47acd9677d980" kindref="member">cpu_lock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga0ad1316b54cc369a21190b8f2a79a008" kindref="member">arc_lock</ref>();</highlight></codeline>
<codeline lineno="475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa93883b650c91f0e9b31a4cd6e935dc8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa93883b650c91f0e9b31a4cd6e935dc8" kindref="member">cpu_unlock</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga73ce913cce085be251cc92a2822db5e6" kindref="member">arc_unlock</ref>();</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="490" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga8801f275b2a194a99f6d673a0e72cd32" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1ga8801f275b2a194a99f6d673a0e72cd32" kindref="member">cpu_lock_save</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga740985b8ca473a2a4060b87ecdeafac6" kindref="member">arc_lock_save</ref>();</highlight></codeline>
<codeline lineno="493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gacb9f94a852339140f2d1d4ab8411c9c3" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gacb9f94a852339140f2d1d4ab8411c9c3" kindref="member">cpu_unlock_restore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>status)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga43d5a1597a3599dc8547a3f633369973" kindref="member">arc_unlock_restore</ref>(status);</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" kindref="member">int_handler_install</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno,<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref><sp/>handler)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1gaeaafcc5805aba7e26781f3bcb537341d" kindref="member">exc_handler_install</ref>(sub_intno,<sp/>handler);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs_103_int_handler_table[sub_intno]<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>axs_103_int_handler_table[sub_intno<sp/>+<sp/>ICTL_INTNO_NUM]<sp/>=<sp/>handler;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="528"><highlight class="normal">}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga22270fbfb25032dfab2ea10646130df7" refkind="member"><highlight class="normal"><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga9ad1c2fee7a6abbc4e0b9f739e72c8c9" kindref="member">INT_HANDLER</ref><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga22270fbfb25032dfab2ea10646130df7" kindref="member">int_handler_get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>intno)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>ictl<sp/>=<sp/>intno<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sub_intno<sp/>=<sp/>intno<sp/>&amp;<sp/>0xff;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>sub_intno<sp/>&gt;=<sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1ga1443e9a11bdf7ee0540d79c6ebcc321f" kindref="member">NUM_EXC_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;<sp/>NUM_EXC_ALL)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>arc<sp/>interrupt<sp/>controller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___c_p_u_1gad9d2ec7da142d48795b1e31af727b021" kindref="member">exc_handler_get</ref>(sub_intno);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1gaa101904aa941dce2e9720249b678aff6" kindref="member">INTNO_ICTL_MB</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>ICTL_INTNO_NUM<sp/>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>board<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axs_103_int_handler_table[sub_intno];</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ictl<sp/>==<sp/><ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref><sp/>&amp;&amp;<sp/>sub_intno<sp/>&lt;=<sp/>CPU_ICTL_INTNO_NUM)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>cpu<sp/>card<sp/>ictl<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axs_103_int_handler_table[sub_intno<sp/>+<sp/>ICTL_INTNO_NUM];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>axs_interrupt_init(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio__int__cfg" kindref="compound">DEV_GPIO_INT_CFG</ref><sp/>int_cfg;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio__bit__isr" kindref="compound">DEV_GPIO_BIT_ISR</ref><sp/>bit_isr;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__gpio" kindref="compound">DEV_GPIO</ref><sp/>*<sp/>port_ptr;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr<sp/>=<sp/><ref refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___g_p_i_o___o_b_j_1gaa3ed54c8ec11f3ae9033d93c86e21c72" kindref="member">gpio_get_dev</ref>(CPU_DW_GPIO_PORT_A);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1abd8f09f3ae841c70f4eac7996b131ba3" kindref="member">int_bit_mask</ref><sp/>=<sp/>ICTL_GPIOA_LINE_MASK;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1a3fc775dfe0535f3009cdc177411625c3" kindref="member">int_bit_type</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1gabbc8e9ff61ad3a75f61fcd778d3bf759" kindref="member">GPIO_INT_BITS_LEVEL_TRIG</ref>(ICTL_GPIOA_LINE_MASK);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1a1cb57db4fecc7b34137972ff05a3ecc5" kindref="member">int_bit_polarity</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1ga0d83ab7af0a4d58b56825313614bd7e1" kindref="member">GPIO_INT_BITS_POL_RISE_EDGE</ref>(ICTL_GPIOA_LINE_MASK);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_cfg.<ref refid="structdev__gpio__int__cfg_1aceb9fb6c9a83d3d2a511cf63f87c3fda" kindref="member">int_bit_debounce</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___i_n_t___c_f_g___s_e_t_1ga890d93ea24a2d81c25478dca7fc81209" kindref="member">GPIO_INT_BITS_DIS_DEBOUNCE</ref>(ICTL_GPIOA_LINE_MASK);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1gada822221fb039eb5549af98e8c88ce9b" kindref="member">GPIO_CMD_SET_BIT_INT_CFG</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;int_cfg));</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_isr.<ref refid="structdev__gpio__bit__isr_1ac46b214e96ed33acaa2394e2fb75fe34" kindref="member">int_bit_ofs</ref><sp/>=<sp/>ICTL_GPIOA_LINE;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_isr.<ref refid="structdev__gpio__bit__isr_1a4c3106c9eedd78f6b1dec60069db08b6" kindref="member">int_bit_handler</ref><sp/>=<sp/>ictl_gpio_int_isr;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1gad43d27e0971a8cbca838dc69af2639a7" kindref="member">GPIO_CMD_SET_BIT_ISR</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)(&amp;bit_isr));</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_ptr-&gt;<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___d_e_v_s_t_r_u_c_t_1ga659dba8a34f6d83194be83c3bdee0677" kindref="member">gpio_control</ref>(<ref refid="group___d_e_v_i_c_e___h_a_l___g_p_i_o___c_t_r_l_c_m_d_1ga0dc3ba08f56ab2c5ca64e4beab70fed5" kindref="member">GPIO_CMD_ENA_BIT_INT</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ICTL_GPIOA_LINE_MASK);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" kindref="member">int_handler_install</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref>,<sp/>dw_ictl_int_isr);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" kindref="member">int_enable</ref>(<ref refid="group___b_o_a_r_d___a_x_s__103_1ga24064ab479da0b66c44d1bb1a8e6fe20" kindref="member">INTNO_ICTL_CPU</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/qiangg/embarc_osp/board/axs/configs/103/axs_103_interrupt.c"/>
  </compounddef>
</doxygen>
