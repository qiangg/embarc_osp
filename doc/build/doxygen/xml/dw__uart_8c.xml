<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dw__uart_8c" kind="file">
    <compoundname>dw_uart.c</compoundname>
    <includes local="no">string.h</includes>
    <includes refid="emb_a_r_c__toolchain_8h" local="yes">embARC_toolchain.h</includes>
    <includes refid="emb_a_r_c__error_8h" local="yes">embARC_error.h</includes>
    <includes refid="arc__exception_8h" local="yes">arc_exception.h</includes>
    <includes refid="dw__uart__hal_8h" local="yes">dw_uart_hal.h</includes>
    <includes refid="dw__uart_8h" local="yes">dw_uart.h</includes>
    <incdepgraph>
      <node id="1909">
        <label>stdbool.h</label>
      </node>
      <node id="1917">
        <label>dev_uart.h</label>
        <link refid="dev__uart_8h"/>
        <childnode refid="1918" relation="include">
        </childnode>
      </node>
      <node id="1913">
        <label>arc.h</label>
        <link refid="arc_8h"/>
        <childnode refid="1914" relation="include">
        </childnode>
      </node>
      <node id="1906">
        <label>stdint.h</label>
      </node>
      <node id="1911">
        <label>arc_builtin.h</label>
        <link refid="arc__builtin_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
      </node>
      <node id="1908">
        <label>stddef.h</label>
      </node>
      <node id="1918">
        <label>dev_common.h</label>
        <link refid="dev__common_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
      </node>
      <node id="1903">
        <label>dw_uart.c</label>
        <link refid="dw_uart.c"/>
        <childnode refid="1904" relation="include">
        </childnode>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1910" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
        <childnode refid="1915" relation="include">
        </childnode>
        <childnode refid="1916" relation="include">
        </childnode>
      </node>
      <node id="1916">
        <label>dw_uart.h</label>
        <link refid="dw__uart_8h"/>
        <childnode refid="1917" relation="include">
        </childnode>
        <childnode refid="1912" relation="include">
        </childnode>
      </node>
      <node id="1907">
        <label>limits.h</label>
      </node>
      <node id="1904">
        <label>string.h</label>
      </node>
      <node id="1914">
        <label>arc_feature_config.h</label>
        <link refid="arc__feature__config_8h"/>
      </node>
      <node id="1912">
        <label>arc_exception.h</label>
        <link refid="arc__exception_8h"/>
        <childnode refid="1905" relation="include">
        </childnode>
        <childnode refid="1913" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
      </node>
      <node id="1915">
        <label>dw_uart_hal.h</label>
        <link refid="dw__uart__hal_8h"/>
      </node>
      <node id="1905">
        <label>embARC_toolchain.h</label>
        <link refid="emb_a_r_c__toolchain_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1907" relation="include">
        </childnode>
        <childnode refid="1908" relation="include">
        </childnode>
        <childnode refid="1909" relation="include">
        </childnode>
      </node>
      <node id="1910">
        <label>embARC_error.h</label>
        <link refid="emb_a_r_c__error_8h"/>
        <childnode refid="1906" relation="include">
        </childnode>
        <childnode refid="1911" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>DesignWare UART Driver Macros</header>
      <description><para>DesignWare UART driver macros used in uart driver </para></description>
      <memberdef kind="define" id="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" prot="public" static="no">
        <name>DW_UART_CHECK_EXP</name>
        <param><defname>EXPR</defname></param>
        <param><defname>ERROR_CODE</defname></param>
        <initializer><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga4151670bbcb21a581f28ed6bc5baa906" kindref="member">CHECK_EXP</ref>(EXPR, ercd, ERROR_CODE, error_exit)</initializer>
        <briefdescription>
<para>check expressions used in DesignWare UART driver implementation </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="59" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="59" bodyend="-1"/>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="dw__uart_8h_1a66f55a5d83c8d575ff0c2add94e6ec51" compoundref="dw__uart_8c" startline="823" endline="849">dw_uart_write</referencedby>
        <referencedby refid="dw__uart_8h_1a9f48bb55260aea46433c78bfd0935c69" compoundref="dw__uart_8c" startline="861" endline="887">dw_uart_read</referencedby>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" prot="public" static="no">
        <name>VALID_CHK_UART_INFO_OBJECT</name>
        <param><defname>uartinfo_obj_ptr</defname></param>
        <initializer>{				\
			<ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((uartinfo_obj_ptr)!=NULL, <ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>);			\
			<ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(((uartinfo_obj_ptr)-&gt;uart_ctrl)!=NULL, <ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga33dcdca4c2e85d1b2899272d9d176553" kindref="member">E_OBJ</ref>);	\
 		}</initializer>
        <briefdescription>
<para>valid check of uart info object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="63" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="63" bodyend="-1"/>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
        <referencedby refid="dw__uart_8h_1a9f48bb55260aea46433c78bfd0935c69" compoundref="dw__uart_8c" startline="861" endline="887">dw_uart_read</referencedby>
        <referencedby refid="dw__uart_8h_1a66f55a5d83c8d575ff0c2add94e6ec51" compoundref="dw__uart_8c" startline="823" endline="849">dw_uart_write</referencedby>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" prot="public" static="no">
        <name>DW_UART_BAUD2DIV</name>
        <param><defname>perifreq</defname></param>
        <param><defname>baud</defname></param>
        <initializer>((perifreq) / ((baud)*16))</initializer>
        <briefdescription>
<para>convert DesignWare baudrate to divisor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="70" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="70" bodyend="-1"/>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>DesignWare UART Interrupt Callback Routine Select Marcos</header>
      <description><para>DesignWare UART interrupt callback routines select macros definitions </para></description>
      <memberdef kind="define" id="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" prot="public" static="no">
        <name>DW_UART_RDY_SND</name>
        <initializer>(1U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ready to send callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="77" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="77" bodyend="-1"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" compoundref="dw__uart_8c" startline="471" endline="484">dw_uart_abort_tx</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" compoundref="dw__uart_8c" startline="432" endline="444">dw_uart_disable_interrupt</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" compoundref="dw__uart_8c" startline="385" endline="410">dw_uart_ena_cbr</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="define" id="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" prot="public" static="no">
        <name>DW_UART_RDY_RCV</name>
        <initializer>(2U)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ready to receive callback </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="78" column="9" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="78" bodyend="-1"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" compoundref="dw__uart_8c" startline="487" endline="500">dw_uart_abort_rx</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" compoundref="dw__uart_8c" startline="432" endline="444">dw_uart_disable_interrupt</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" compoundref="dw__uart_8c" startline="385" endline="410">dw_uart_ena_cbr</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gacde67c4589b7545d916585f051bc2cdf" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_databits[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_databits</name>
        <initializer>= { 
	DW_UART_LCR_WORD_LEN5, DW_UART_LCR_WORD_LEN6, 
	DW_UART_LCR_WORD_LEN7, DW_UART_LCR_WORD_LEN8}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="90" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga556033b93cfcc60100dc0fe792b84bf4" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_parity[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_parity</name>
        <initializer>= {
	DW_UART_LCR_PARITY_NONE, DW_UART_LCR_PARITY_ODD,
	DW_UART_LCR_PARITY_EVEN, DW_UART_LCR_PARITY_MASK,
	DW_UART_LCR_PARITY_SPACE
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="93" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaa85824a21e026ecebca6cd01f36a59a3" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t dw_uart_stopbits[]</definition>
        <argsstring>[]</argsstring>
        <name>dw_uart_stopbits</name>
        <initializer>= {
	DW_UART_LCR_1_STOP_BIT, DW_UART_LCR_1D5_STOP_BIT,
	DW_UART_LCR_2_STOP_BIT
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="98" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_putready</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_putready</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>test whether uart is ready to send, 1 ready, 0 not ready </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="104" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="104" bodyend="111"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab45a15d2186c5d50f2af6dd2c7b9fa74" compoundref="dw__uart_8c" startline="139" endline="146">dw_uart_snd_chr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" compoundref="dw__uart_8c" startline="162" endline="168">dw_uart_psnd_chr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" compoundref="dw__uart_8c" startline="503" endline="518">dw_uart_get_txavail</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_getready</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_getready</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>test whether uart is ready to receive, 1 ready, 0 not ready </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="113" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="113" bodyend="120"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" compoundref="dw__uart_8c" startline="174" endline="180">dw_uart_prcv_chr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" compoundref="dw__uart_8c" startline="521" endline="536">dw_uart_get_rxavail</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline void</type>
        <definition>Inline void dw_uart_putchar</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_putchar</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>write char to uart send fifo </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="122" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="122" bodyend="125"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab45a15d2186c5d50f2af6dd2c7b9fa74" compoundref="dw__uart_8c" startline="139" endline="146">dw_uart_snd_chr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" compoundref="dw__uart_8c" startline="162" endline="168">dw_uart_psnd_chr</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_getchar</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_getchar</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>read data from uart receive fifo, return data received </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="127" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="127" bodyend="130"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gade34ee9170b5f8580baf8c2c8306c410" compoundref="dw__uart_8c" startline="153" endline="156">dw_uart_rcv_chr</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" compoundref="dw__uart_8c" startline="174" endline="180">dw_uart_prcv_chr</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab45a15d2186c5d50f2af6dd2c7b9fa74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_snd_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_snd_chr</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>send char by uart when available, mostly used in interrupt method, non-blocked function </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chr</parametername>
</parameternamelist>
<parameterdescription>
<para>char to be sent </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>send successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>-1</parametername>
</parameternamelist>
<parameterdescription>
<para>not ready to send data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="139" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="139" bodyend="146"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" compoundref="dw__uart_8c" startline="122" endline="125">dw_uart_putchar</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" compoundref="dw__uart_8c" startline="104" endline="111">dw_uart_putready</references>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gade34ee9170b5f8580baf8c2c8306c410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_rcv_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_rcv_chr</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>receive one char from uart, mostly used in interrupt routine, non-blocked function </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>data received by the uart </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="153" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="153" bodyend="156"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" compoundref="dw__uart_8c" startline="127" endline="130">dw_uart_getchar</references>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline void</type>
        <definition>Inline void dw_uart_psnd_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, char chr)</argsstring>
        <name>dw_uart_psnd_chr</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>char</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
<para>send char by uart in poll method, blocked function </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">chr</parametername>
</parameternamelist>
<parameterdescription>
<para>char to be sent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="162" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="162" bodyend="168"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" compoundref="dw__uart_8c" startline="122" endline="125">dw_uart_putchar</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" compoundref="dw__uart_8c" startline="104" endline="111">dw_uart_putready</references>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" compoundref="dw__uart_8c" startline="323" endline="346">dw_uart_flush_output</referencedby>
        <referencedby refid="dw__uart_8h_1a66f55a5d83c8d575ff0c2add94e6ec51" compoundref="dw__uart_8c" startline="823" endline="849">dw_uart_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline int32_t</type>
        <definition>Inline int32_t dw_uart_prcv_chr</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_prcv_chr</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>receive one char from uart in poll method, blocked function </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>data received by the uart </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="174" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="174" bodyend="180"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" compoundref="dw__uart_8c" startline="127" endline="130">dw_uart_getchar</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" compoundref="dw__uart_8c" startline="113" endline="120">dw_uart_getready</references>
        <referencedby refid="dw__uart_8h_1a9f48bb55260aea46433c78bfd0935c69" compoundref="dw__uart_8c" startline="861" endline="887">dw_uart_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1899e10572c9f538d78067c6a76f3efe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline uint32_t</type>
        <definition>Inline uint32_t dw_uart_get_txfifo_len</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_get_txfifo_len</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Get TX FIFO Length. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="183" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="183" bodyend="196"/>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga60fe4d5fe17acd86d8f98b297b12bfa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline uint32_t</type>
        <definition>Inline uint32_t dw_uart_get_rxfifo_len</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_get_rxfifo_len</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Get RX FIFO Length. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="199" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="199" bodyend="212"/>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_set_dps</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, UART_DPS_FORMAT *dps)</argsstring>
        <name>dw_uart_set_dps</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gacaa41f5e07b9b64820a2a96bd96dfd41" kindref="member">UART_DPS_FORMAT</ref> *</type>
          <declname>dps</declname>
        </param>
        <briefdescription>
<para>set designware uart DPS value </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dps</parametername>
</parameternamelist>
<parameterdescription>
<para>data bits/parity bit/stop bits parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>0</parametername>
</parameternamelist>
<parameterdescription>
<para>Set ok </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>!0</parametername>
</parameternamelist>
<parameterdescription>
<para>Set failed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="221" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="221" bodyend="243"/>
        <references refid="structuart__dps__format_1a8e849d194ac4eeea56b98e0819fde84a" compoundref="dev__uart_8h" startline="124">uart_dps_format::databits</references>
        <references refid="structuart__dps__format_1a4eb21acfa64cdd536ee454f21789970c" compoundref="dev__uart_8h" startline="125">uart_dps_format::parity</references>
        <references refid="structuart__dps__format_1ad2d49c7a22c6028af004d8287389edc7" compoundref="dev__uart_8h" startline="126">uart_dps_format::stopbits</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gga24fd4dba815fc40fbd8e8c37dbf87c7aa9866e632545cc7de127aee8071528030" compoundref="dev__uart_8h" startline="108">UART_PARITY_SPACE</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1ggacbd51ac613ec824eeb73a5b6bf743ca6a8408cb794ac8f8e4003fb9e99b4e3b7d" compoundref="dev__uart_8h" startline="117">UART_STPBITS_TWO</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" compoundref="dw__uart_8c" startline="307" endline="317">dw_uart_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_set_baud</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, uint32_t baud_divisor)</argsstring>
        <name>dw_uart_set_baud</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud_divisor</declname>
        </param>
        <briefdescription>
<para>set designware uart baudrate </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>baud_divisor</parametername>
</parameternamelist>
<parameterdescription>
<para>uart baudrate divisor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="250" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="250" bodyend="261"/>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" compoundref="dw__uart_8c" startline="459" endline="468">dw_uart_disable_device</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" compoundref="dw__uart_8c" startline="447" endline="456">dw_uart_enable_device</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" compoundref="dw__uart_8c" startline="307" endline="317">dw_uart_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gabb4256ea2b68ef4014313192a73be13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline void</type>
        <definition>Inline void dw_uart_software_reset</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_software_reset</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
<para>Do uart software reset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="267" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="267" bodyend="271"/>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" compoundref="dw__uart_8c" startline="307" endline="317">dw_uart_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_set_hwfc</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, UART_HW_FLOW_CONTROL hwfc)</argsstring>
        <name>dw_uart_set_hwfc</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref></type>
          <declname>hwfc</declname>
        </param>
        <briefdescription>
<para>set designware uart baudrate </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hwfc</parametername>
</parameternamelist>
<parameterdescription>
<para>uart hardware flow control type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Need to set corresponding pin functions </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="279" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="279" bodyend="290"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" compoundref="dev__uart_8h" startline="142">UART_FC_BOTH</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a42eb1be010429695afe750de07e7ade6" compoundref="dev__uart_8h" startline="141">UART_FC_CTS</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" compoundref="dev__uart_8h" startline="139">UART_FC_NONE</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5afc75cc759e85ee277ead4520fb1d0b90" compoundref="dev__uart_8h" startline="140">UART_FC_RTS</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" compoundref="dw__uart_8c" startline="307" endline="317">dw_uart_init</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga75dc17b8200d755deb873719f450f591" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline void</type>
        <definition>Inline void dw_uart_set_break</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_set_break</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="292" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaa4b9f03ef0fcab96324b12d7cce682cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Inline void</type>
        <definition>Inline void dw_uart_clr_break</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr)</argsstring>
        <name>dw_uart_clr_break</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="297" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_init</definition>
        <argsstring>(DW_UART_REG *uart_reg_ptr, uint32_t baud_divisor, UART_DPS_FORMAT *dps, UART_HW_FLOW_CONTROL hwfc)</argsstring>
        <name>dw_uart_init</name>
        <param>
          <type><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref> *</type>
          <declname>uart_reg_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud_divisor</declname>
        </param>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gacaa41f5e07b9b64820a2a96bd96dfd41" kindref="member">UART_DPS_FORMAT</ref> *</type>
          <declname>dps</declname>
        </param>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref></type>
          <declname>hwfc</declname>
        </param>
        <briefdescription>
<para>init designware uart with selected baud </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_reg_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart register structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud_divisor</parametername>
</parameternamelist>
<parameterdescription>
<para>baudrate divisor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="307" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="307" bodyend="317"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" compoundref="dw__uart_8c" startline="250" endline="261">dw_uart_set_baud</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" compoundref="dw__uart_8c" startline="221" endline="243">dw_uart_set_dps</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" compoundref="dw__uart_8c" startline="279" endline="290">dw_uart_set_hwfc</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gabb4256ea2b68ef4014313192a73be13f" compoundref="dw__uart_8c" startline="267" endline="271">dw_uart_software_reset</references>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_flush_output</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_flush_output</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>set designware uart baudrate </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart information structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="323" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="323" bodyend="346"/>
        <references refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" compoundref="dev__common_8h" startline="187">dev_buffer::buf</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" compoundref="dw__uart_8c" startline="162" endline="168">dw_uart_psnd_chr</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" compoundref="dev__common_8h" startline="188">dev_buffer::len</references>
        <references refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" compoundref="dev__common_8h" startline="189">dev_buffer::ofs</references>
        <references refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" compoundref="dev__uart_8h" startline="362">dev_uart_info::tx_buf</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_dis_cbr</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr, uint32_t cbrtn)</argsstring>
        <name>dw_uart_dis_cbr</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cbrtn</declname>
        </param>
        <briefdescription>
<para>disable designware uart send or receive interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">DEV_UART_INFO</parametername>
</parameternamelist>
<parameterdescription>
<para>*uart_info_ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbrtn</parametername>
</parameternamelist>
<parameterdescription>
<para>control code of callback routine of send or receive </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="353" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="353" bodyend="378"/>
        <references refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" compoundref="dw__uart_8h" startline="97">DW_UART_GINT_ENABLE</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" compoundref="dw__uart_8h" startline="99">DW_UART_RXINT_ENABLE</references>
        <references refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" compoundref="dw__uart_8h" startline="98">DW_UART_TXINT_ENABLE</references>
        <references refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" compoundref="arc__exception_8c" startline="279" endline="287">int_disable</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" compoundref="dw__uart_8h" startline="110">dw_uart_ctrl::intno</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" compoundref="dw__uart_8c" startline="487" endline="500">dw_uart_abort_rx</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" compoundref="dw__uart_8c" startline="471" endline="484">dw_uart_abort_tx</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
        <referencedby refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" compoundref="dw__uart_8c" startline="432" endline="444">dw_uart_disable_interrupt</referencedby>
        <referencedby refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" compoundref="dw__uart_8c" startline="894" endline="980">dw_uart_isr</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_ena_cbr</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr, uint32_t cbrtn)</argsstring>
        <name>dw_uart_ena_cbr</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>cbrtn</declname>
        </param>
        <briefdescription>
<para>enable DesignWare UART send or receive interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">DEV_UART_INFO</parametername>
</parameternamelist>
<parameterdescription>
<para>*uart_info_ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cbrtn</parametername>
</parameternamelist>
<parameterdescription>
<para>control code of callback routine of send or receive </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="385" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="385" bodyend="410"/>
        <references refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" compoundref="dw__uart_8h" startline="97">DW_UART_GINT_ENABLE</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" compoundref="dw__uart_8h" startline="99">DW_UART_RXINT_ENABLE</references>
        <references refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" compoundref="dw__uart_8h" startline="98">DW_UART_TXINT_ENABLE</references>
        <references refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" compoundref="arc__exception_8c" startline="294" endline="302">int_enable</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" compoundref="dw__uart_8h" startline="110">dw_uart_ctrl::intno</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga66d7d3cbabaff997b04ede14d386d993" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_enable_interrupt</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_enable_interrupt</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>enable designware uart interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart information structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="416" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="416" bodyend="427"/>
        <references refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" compoundref="dw__uart_8h" startline="97">DW_UART_GINT_ENABLE</references>
        <references refid="structdw__uart__ctrl_1a21df8fde009f07577bfc55d56ff10a1a" compoundref="dw__uart_8h" startline="111">dw_uart_ctrl::dw_uart_int_handler</references>
        <references refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" compoundref="arc__exception_8c" startline="294" endline="302">int_enable</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" compoundref="arc__exception_8c" startline="493" endline="501">int_handler_install</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" compoundref="dw__uart_8h" startline="110">dw_uart_ctrl::intno</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_disable_interrupt</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_disable_interrupt</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>disable designware uart interrupt </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>uart_info_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>uart information structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="432" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="432" bodyend="444"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</references>
        <references refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" compoundref="dw__uart_8h" startline="97">DW_UART_GINT_ENABLE</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" compoundref="dw__uart_8h" startline="99">DW_UART_RXINT_ENABLE</references>
        <references refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" compoundref="dw__uart_8h" startline="98">DW_UART_TXINT_ENABLE</references>
        <references refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" compoundref="arc__exception_8c" startline="279" endline="287">int_disable</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" compoundref="dw__uart_8h" startline="110">dw_uart_ctrl::intno</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" compoundref="dw__uart_8c" startline="551" endline="609">dw_uart_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_enable_device</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_enable_device</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>enable designware uart </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="447" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="447" bodyend="456"/>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" compoundref="dw__uart_8c" startline="250" endline="261">dw_uart_set_baud</references>
        <references refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" compoundref="dev__uart_8h" startline="359">dev_uart_info::baudrate</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_disable_device</definition>
        <argsstring>(DEV_UART_INFO *uart_info_ptr)</argsstring>
        <name>dw_uart_disable_device</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1gad3367f6deb377a74d2856e07762424bc" kindref="member">DEV_UART_INFO</ref> *</type>
          <declname>uart_info_ptr</declname>
        </param>
        <briefdescription>
<para>disable designware uart </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="459" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="459" bodyend="468"/>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" compoundref="dw__uart_8c" startline="250" endline="261">dw_uart_set_baud</references>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_abort_tx</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_abort_tx</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
<para>abort current interrupt transmit transfer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="471" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="471" bodyend="484"/>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" compoundref="dw__uart_8h" startline="98">DW_UART_TXINT_ENABLE</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga80e3a2bfa3fca72a807e59da0bb3b2ee" compoundref="dev__common_8h" startline="116">DEV_IN_TX_ABRT</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" compoundref="dev__uart_8h" startline="334">dev_uart_cbs::tx_cb</references>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void dw_uart_abort_rx</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_abort_rx</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
<para>abort current interrupt receive transfer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="487" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="487" bodyend="500"/>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" compoundref="dw__uart_8h" startline="114">dw_uart_ctrl::int_status</references>
        <references refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" compoundref="dw__uart_8h" startline="99">DW_UART_RXINT_ENABLE</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga039071faab7f693aff3dc479800073fc" compoundref="dev__common_8h" startline="117">DEV_IN_RX_ABRT</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" compoundref="dev__uart_8h" startline="335">dev_uart_cbs::rx_cb</references>
        <referencedby refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" compoundref="dw__uart_8c" startline="618" endline="646">dw_uart_close</referencedby>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_get_txavail</definition>
        <argsstring>(DW_UART_CTRL *uart_ctrl_ptr)</argsstring>
        <name>dw_uart_get_txavail</name>
        <param>
          <type><ref refid="dw__uart_8h_1a570bebe153d185bf2de8e79db464da36" kindref="member">DW_UART_CTRL</ref> *</type>
          <declname>uart_ctrl_ptr</declname>
        </param>
        <briefdescription>
<para>Get available transmit fifo count. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="503" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="503" bodyend="518"/>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" compoundref="dw__uart_8h" startline="112">dw_uart_ctrl::tx_fifo_len</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" compoundref="dw__uart_8c" startline="104" endline="111">dw_uart_putready</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>static int32_t dw_uart_get_rxavail</definition>
        <argsstring>(DW_UART_CTRL *uart_ctrl_ptr)</argsstring>
        <name>dw_uart_get_rxavail</name>
        <param>
          <type><ref refid="dw__uart_8h_1a570bebe153d185bf2de8e79db464da36" kindref="member">DW_UART_CTRL</ref> *</type>
          <declname>uart_ctrl_ptr</declname>
        </param>
        <briefdescription>
<para>Get available receive fifo count. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="521" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="521" bodyend="536"/>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="structdw__uart__ctrl_1ab28e548352feb3d3bbce7e8f217727ff" compoundref="dw__uart_8h" startline="113">dw_uart_ctrl::rx_fifo_len</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" compoundref="dw__uart_8c" startline="113" endline="120">dw_uart_getready</references>
        <referencedby refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" compoundref="dw__uart_8c" startline="662" endline="811">dw_uart_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1a49c3f35887ad36260c0576c58614db71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_open</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t baud)</argsstring>
        <name>dw_uart_open</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baud</declname>
        </param>
        <briefdescription>
<para>open a designware uart device </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">baud</parametername>
</parameternamelist>
<parameterdescription>
<para>baudrate to initialized </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>If device was opened before with different baudrate, then return E_OPNED </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Open settings are not supported </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="551" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="551" bodyend="609"/>
        <references refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" compoundref="dev__uart_8h" startline="359">dev_uart_info::baudrate</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="structdev__uart__info_1aef7fdb7858a5bb595b5751231af3293d" compoundref="dev__uart_8h" startline="360">dev_uart_info::dps_format</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gaeecbb31e8cad9deb3693e9acf6df6f25" compoundref="dev__uart_8h" startline="132">dps_format_default</references>
        <references refid="structdw__uart__ctrl_1a99f664a7c1dc7d150c3adb68601421b1" compoundref="dw__uart_8h" startline="109">dw_uart_ctrl::dw_apb_bus_freq</references>
        <references refid="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" compoundref="dw__uart_8c" startline="70">DW_UART_BAUD2DIV</references>
        <references refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" compoundref="dw__uart_8c" startline="59">DW_UART_CHECK_EXP</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" compoundref="dw__uart_8c" startline="432" endline="444">dw_uart_disable_interrupt</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga60fe4d5fe17acd86d8f98b297b12bfa8" compoundref="dw__uart_8c" startline="199" endline="212">dw_uart_get_rxfifo_len</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1899e10572c9f538d78067c6a76f3efe" compoundref="dw__uart_8c" startline="183" endline="196">dw_uart_get_txfifo_len</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" compoundref="dw__uart_8c" startline="307" endline="317">dw_uart_init</references>
        <references refid="structdw__uart__ctrl_1a21df8fde009f07577bfc55d56ff10a1a" compoundref="dw__uart_8h" startline="111">dw_uart_ctrl::dw_uart_int_handler</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gaa5935765e74b9d1a7e72c9c8f9018b42" compoundref="emb_a_r_c__error_8h" startline="78">E_OPNED</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" compoundref="emb_a_r_c__error_8h" startline="60">E_PAR</references>
        <references refid="structdev__uart__info_1a8f6d0f1edf567943d020122bd61fa1fe" compoundref="dev__uart_8h" startline="365">dev_uart_info::extra</references>
        <references refid="structdev__uart__info_1a2fc66c56990d21e53c3fac977c4e93e0" compoundref="dev__uart_8h" startline="361">dev_uart_info::hwfc</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ga4f722366b7af5439793dc46b8a209fe8" compoundref="dev__uart_8h" startline="145">hwfc_default</references>
        <references refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" compoundref="arc__exception_8c" startline="493" endline="501">int_handler_install</references>
        <references refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" compoundref="dw__uart_8h" startline="110">dw_uart_ctrl::intno</references>
        <references refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" compoundref="dev__uart_8h" startline="357">dev_uart_info::opn_cnt</references>
        <references refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" compoundref="dev__uart_8h" startline="363">dev_uart_info::rx_buf</references>
        <references refid="structdw__uart__ctrl_1ab28e548352feb3d3bbce7e8f217727ff" compoundref="dw__uart_8h" startline="113">dw_uart_ctrl::rx_fifo_len</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" compoundref="dev__uart_8h" startline="362">dev_uart_info::tx_buf</references>
        <references refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" compoundref="dw__uart_8h" startline="112">dw_uart_ctrl::tx_fifo_len</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1gaae11e5b8471fdfd4437481ac5be509cc" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="79" endline="82">dw_uart_0_open</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga45741c7dbff3b7d45a040fe0a91dad39" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="148" endline="151">dw_uart_1_open</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga9e9a56c553f179a6a11236b8e57ce40d" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="215" endline="218">dw_uart_2_open</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga1076f74d612eaad68b74dca09cc352ad" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="312" endline="315">dw_uart_3_open</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1a40287dfa053b6bc49bcaf66c35d73b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_close</definition>
        <argsstring>(DEV_UART *uart_obj)</argsstring>
        <name>dw_uart_close</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <briefdescription>
<para>close a DesignWare UART device </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Open successfully without any issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OPNED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is still opened, the device opn_cnt decreased by 1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="618" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="618" bodyend="646"/>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" compoundref="dw__uart_8c" startline="487" endline="500">dw_uart_abort_rx</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" compoundref="dw__uart_8c" startline="471" endline="484">dw_uart_abort_tx</references>
        <references refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" compoundref="dw__uart_8c" startline="59">DW_UART_CHECK_EXP</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" compoundref="dw__uart_8c" startline="459" endline="468">dw_uart_disable_device</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" compoundref="dw__uart_8c" startline="432" endline="444">dw_uart_disable_interrupt</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" compoundref="dw__uart_8c" startline="323" endline="346">dw_uart_flush_output</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gaa5935765e74b9d1a7e72c9c8f9018b42" compoundref="emb_a_r_c__error_8h" startline="78">E_OPNED</references>
        <references refid="structdev__uart__info_1a8f6d0f1edf567943d020122bd61fa1fe" compoundref="dev__uart_8h" startline="365">dev_uart_info::extra</references>
        <references refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" compoundref="dev__uart_8h" startline="357">dev_uart_info::opn_cnt</references>
        <references refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" compoundref="dev__uart_8h" startline="363">dev_uart_info::rx_buf</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" compoundref="dev__uart_8h" startline="362">dev_uart_info::tx_buf</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga210e2c054be71e307f0f4affcf09b2bb" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="84" endline="87">dw_uart_0_close</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1gaa134423f83a7ad146e2ff1e3455be669" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="153" endline="156">dw_uart_1_close</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga19f7c6bb9e2211dc58beb3a2ca69a7f1" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="220" endline="223">dw_uart_2_close</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1gae38251023212b483543ec042b190a08a" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="317" endline="320">dw_uart_3_close</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1aad6c59b900e3f9b72b1eac4ca889f317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_control</definition>
        <argsstring>(DEV_UART *uart_obj, uint32_t ctrl_cmd, void *param)</argsstring>
        <name>dw_uart_control</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>ctrl_cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>control uart by ctrl command </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ctrl_cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>control command code to do specific uart work </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">param</parametername>
</parameternamelist>
<parameterdescription>
<para>parameters used to control uart or return something </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>E_OK</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device successfully </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CLSED</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is not opened </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_DIS</parametername>
</parameternamelist>
<parameterdescription>
<para>Device is disabled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to hardware issues </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_CTX</parametername>
</parameternamelist>
<parameterdescription>
<para>Control device failed, due to different reasons like in transfer state </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_NOSPT</parametername>
</parameternamelist>
<parameterdescription>
<para>Control command is not supported or not valid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="662" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="662" bodyend="811"/>
        <references refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" compoundref="dev__uart_8h" startline="359">dev_uart_info::baudrate</references>
        <references refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" compoundref="dev__common_8h" startline="187">dev_buffer::buf</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" compoundref="emb_a_r_c__error_8h" startline="143">CHECK_ALIGN_4BYTES</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="structdev__uart__info_1aef7fdb7858a5bb595b5751231af3293d" compoundref="dev__uart_8h" startline="360">dev_uart_info::dps_format</references>
        <references refid="structdw__uart__ctrl_1a99f664a7c1dc7d150c3adb68601421b1" compoundref="dw__uart_8h" startline="109">dw_uart_ctrl::dw_apb_bus_freq</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" compoundref="dw__uart_8c" startline="487" endline="500">dw_uart_abort_rx</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" compoundref="dw__uart_8c" startline="471" endline="484">dw_uart_abort_tx</references>
        <references refid="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" compoundref="dw__uart_8c" startline="70">DW_UART_BAUD2DIV</references>
        <references refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" compoundref="dw__uart_8c" startline="59">DW_UART_CHECK_EXP</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" compoundref="dw__uart_8c" startline="459" endline="468">dw_uart_disable_device</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" compoundref="dw__uart_8c" startline="385" endline="410">dw_uart_ena_cbr</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" compoundref="dw__uart_8c" startline="447" endline="456">dw_uart_enable_device</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" compoundref="dw__uart_8c" startline="323" endline="346">dw_uart_flush_output</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" compoundref="dw__uart_8c" startline="521" endline="536">dw_uart_get_rxavail</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" compoundref="dw__uart_8c" startline="503" endline="518">dw_uart_get_txavail</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" compoundref="dw__uart_8c" startline="250" endline="261">dw_uart_set_baud</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" compoundref="dw__uart_8c" startline="221" endline="243">dw_uart_set_dps</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" compoundref="dw__uart_8c" startline="279" endline="290">dw_uart_set_hwfc</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" compoundref="emb_a_r_c__error_8h" startline="79">E_CLSED</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac05cde47c29052935fd39d6d8a6c5ff4" compoundref="emb_a_r_c__error_8h" startline="57">E_NOSPT</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" compoundref="emb_a_r_c__error_8h" startline="60">E_PAR</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" compoundref="emb_a_r_c__error_8h" startline="56">E_SYS</references>
        <references refid="structdev__uart__cbs_1a38de0b4956621917a15e6974f9cd6ca4" compoundref="dev__uart_8h" startline="336">dev_uart_cbs::err_cb</references>
        <references refid="structdev__uart__info_1a2fc66c56990d21e53c3fac977c4e93e0" compoundref="dev__uart_8h" startline="361">dev_uart_info::hwfc</references>
        <references refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" compoundref="dev__common_8h" startline="188">dev_buffer::len</references>
        <references refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" compoundref="dev__common_8h" startline="189">dev_buffer::ofs</references>
        <references refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" compoundref="dev__uart_8h" startline="357">dev_uart_info::opn_cnt</references>
        <references refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" compoundref="dev__uart_8h" startline="363">dev_uart_info::rx_buf</references>
        <references refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" compoundref="dev__uart_8h" startline="335">dev_uart_cbs::rx_cb</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" compoundref="dev__uart_8h" startline="362">dev_uart_info::tx_buf</references>
        <references refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" compoundref="dev__uart_8h" startline="334">dev_uart_cbs::tx_cb</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga091e096b839d8f76f284fc80428f6431" compoundref="dev__uart_8h" startline="323">UART_CMD_ABORT_RX</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga96ebb358e1b93a49dffb6fd08ea9d52e" compoundref="dev__uart_8h" startline="312">UART_CMD_ABORT_TX</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga27cc6b038a8cbfb6b04af889d0d4121c" compoundref="dev__uart_8h" startline="235">UART_CMD_BREAK_CLR</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga1f80b681a44db548672e225872820439" compoundref="dev__uart_8h" startline="228">UART_CMD_BREAK_SET</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gae7d733241c19376c55bb6873ba39abae" compoundref="dev__uart_8h" startline="196">UART_CMD_DIS_DEV</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga778353469e5446cd8e540720792e39a8" compoundref="dev__uart_8h" startline="186">UART_CMD_ENA_DEV</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gae4fafef76cb1216e06523779ef842847" compoundref="dev__uart_8h" startline="203">UART_CMD_FLUSH_OUTPUT</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga8d2dc24b2777c4ad6ac72350c2d6b6c4" compoundref="dev__uart_8h" startline="221">UART_CMD_GET_RXAVAIL</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gacf4d94078ba78b978a620c7e6b352736" compoundref="dev__uart_8h" startline="179">UART_CMD_GET_STATUS</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga3b38c556992512590acd208eda841c2c" compoundref="dev__uart_8h" startline="212">UART_CMD_GET_TXAVAIL</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga764fa9e43d0e6386328e6123469dfd05" compoundref="dev__uart_8h" startline="172">UART_CMD_SET_BAUD</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga814ea0d0efd24844998b46429c284c9e" compoundref="dev__uart_8h" startline="242">UART_CMD_SET_DPS_FORMAT</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga7161d329fc09ba91caf8196c949512ce" compoundref="dev__uart_8h" startline="273">UART_CMD_SET_ERRCB</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga7fac96ac8950657bf84be4086327d708" compoundref="dev__uart_8h" startline="249">UART_CMD_SET_HWFC</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga18aa857d3b0815ca0235f41e4b6c1067" compoundref="dev__uart_8h" startline="265">UART_CMD_SET_RXCB</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga04b7d1f98d6a94c3590677121a853105" compoundref="dev__uart_8h" startline="301">UART_CMD_SET_RXINT</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gab41fc9f4e9745c1d30bf3bbd0733ab31" compoundref="dev__uart_8h" startline="287">UART_CMD_SET_RXINT_BUF</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga0479fa2c6d071ba12b44649df16ad9ae" compoundref="dev__uart_8h" startline="257">UART_CMD_SET_TXCB</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gab3644b0ee0991f276c0e4d20d794ac96" compoundref="dev__uart_8h" startline="294">UART_CMD_SET_TXINT</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga45de4c83687e1c2ccb305a5d9c26077a" compoundref="dev__uart_8h" startline="280">UART_CMD_SET_TXINT_BUF</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" compoundref="dev__uart_8h" startline="142">UART_FC_BOTH</references>
        <references refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" compoundref="dev__uart_8h" startline="139">UART_FC_NONE</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1gabdc562db81bd8c2183975fe16ed540c1" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="89" endline="92">dw_uart_0_control</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga0e39b35a32fe3ca3ec0365e6c9e09bf7" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="158" endline="161">dw_uart_1_control</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga031be63e1a011f6b81daaf48f90f1bc8" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="225" endline="228">dw_uart_2_control</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1ga6177fa383b2a7afa802179956160ee13" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="322" endline="325">dw_uart_3_control</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1a66f55a5d83c8d575ff0c2add94e6ec51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_write</definition>
        <argsstring>(DEV_UART *uart_obj, const void *data, uint32_t len)</argsstring>
        <name>dw_uart_write</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>send data through DesignWare UART </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>data that need to send (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>data length need to send </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t write data to hardware due to hardware issues </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="823" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="823" bodyend="849"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" compoundref="dw__uart_8c" startline="59">DW_UART_CHECK_EXP</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" compoundref="dw__uart_8c" startline="162" endline="168">dw_uart_psnd_chr</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" compoundref="emb_a_r_c__error_8h" startline="79">E_CLSED</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" compoundref="emb_a_r_c__error_8h" startline="60">E_PAR</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" compoundref="emb_a_r_c__error_8h" startline="56">E_SYS</references>
        <references refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" compoundref="dev__uart_8h" startline="357">dev_uart_info::opn_cnt</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1gab66fb27ec00191eb382d8915b4542f36" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="94" endline="97">dw_uart_0_write</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga5119ed58e3c32d994373f70714cd95bd" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="163" endline="166">dw_uart_1_write</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga3dec6539a621d9b7e81b89b7a111c6df" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="230" endline="233">dw_uart_2_write</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1gaab5cfb5e7bae2e4e257fa7db0bf10b5b" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="327" endline="330">dw_uart_3_write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1a9f48bb55260aea46433c78bfd0935c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t dw_uart_read</definition>
        <argsstring>(DEV_UART *uart_obj, void *data, uint32_t len)</argsstring>
        <name>dw_uart_read</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>read data through DesignWare UART </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>data that need to read (data must be char type) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>data count need to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>&gt;0</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte count that was successfully sent for poll method </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_OBJ</parametername>
</parameternamelist>
<parameterdescription>
<para>Device object is not valid or not exists </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_PAR</parametername>
</parameternamelist>
<parameterdescription>
<para>Parameter is not valid for current control command </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>E_SYS</parametername>
</parameternamelist>
<parameterdescription>
<para>Can&apos;t receive data from hardware due to hardware issues, such as device is disabled </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="861" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="861" bodyend="887"/>
        <references refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" compoundref="dev__common_8h" startline="112">DEV_ENABLED</references>
        <references refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" compoundref="dw__uart_8c" startline="59">DW_UART_CHECK_EXP</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" compoundref="dw__uart_8c" startline="174" endline="180">dw_uart_prcv_chr</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" compoundref="emb_a_r_c__error_8h" startline="79">E_CLSED</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" compoundref="emb_a_r_c__error_8h" startline="60">E_PAR</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" compoundref="emb_a_r_c__error_8h" startline="56">E_SYS</references>
        <references refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" compoundref="dev__uart_8h" startline="357">dev_uart_info::opn_cnt</references>
        <references refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" compoundref="dev__uart_8h" startline="358">dev_uart_info::status</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga9f9f257f755be460e66e09214bdb58f0" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="99" endline="102">dw_uart_0_read</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga6214f35c6bfcdd5ea52ab731a431319f" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="168" endline="171">dw_uart_1_read</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1gad8355cac920fab73e1feff895fa767b2" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="235" endline="238">dw_uart_2_read</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1gab525a40a6e3e64305db97586a6a149ed" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="332" endline="335">dw_uart_3_read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dw__uart_8c_1a931f15b8f8a5a29ab3a7344aa3cb10d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dw_uart_isr</definition>
        <argsstring>(DEV_UART *uart_obj, void *ptr)</argsstring>
        <name>dw_uart_isr</name>
        <param>
          <type><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___d_e_v_s_t_r_u_c_t_1ga8e8dd2c66ea7a119aec01e976ff4d6b4" kindref="member">DEV_UART</ref> *</type>
          <declname>uart_obj</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>DesignWare UART interrupt processing routine. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">uart_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>uart object structure pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>extra information </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" line="894" column="1" bodyfile="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c" bodystart="894" bodyend="980"/>
        <references refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" compoundref="dev__common_8h" startline="187">dev_buffer::buf</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" compoundref="dw__uart_8c" startline="353" endline="378">dw_uart_dis_cbr</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" compoundref="dw__uart_8c" startline="127" endline="130">dw_uart_getchar</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" compoundref="dw__uart_8c" startline="113" endline="120">dw_uart_getready</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" compoundref="dw__uart_8c" startline="122" endline="125">dw_uart_putchar</references>
        <references refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" compoundref="dw__uart_8c" startline="104" endline="111">dw_uart_putready</references>
        <references refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" compoundref="dw__uart_8c" startline="78">DW_UART_RDY_RCV</references>
        <references refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" compoundref="dw__uart_8c" startline="77">DW_UART_RDY_SND</references>
        <references refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" compoundref="dw__uart_8h" startline="108">dw_uart_ctrl::dw_uart_regbase</references>
        <references refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" compoundref="emb_a_r_c__error_8h" startline="55">E_OK</references>
        <references refid="structdev__uart__cbs_1a38de0b4956621917a15e6974f9cd6ca4" compoundref="dev__uart_8h" startline="336">dev_uart_cbs::err_cb</references>
        <references refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" compoundref="dev__common_8h" startline="188">dev_buffer::len</references>
        <references refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" compoundref="dev__common_8h" startline="189">dev_buffer::ofs</references>
        <references refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" compoundref="dev__uart_8h" startline="363">dev_uart_info::rx_buf</references>
        <references refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" compoundref="dev__uart_8h" startline="335">dev_uart_cbs::rx_cb</references>
        <references refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" compoundref="dev__uart_8h" startline="362">dev_uart_info::tx_buf</references>
        <references refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" compoundref="dev__uart_8h" startline="334">dev_uart_cbs::tx_cb</references>
        <references refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" compoundref="dev__uart_8h" startline="364">dev_uart_info::uart_cbs</references>
        <references refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" compoundref="dev__uart_8h" startline="356">dev_uart_info::uart_ctrl</references>
        <references refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" compoundref="dev__uart_8h" startline="382">dev_uart::uart_info</references>
        <references refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" compoundref="dw__uart_8c" startline="63">VALID_CHK_UART_INFO_OBJECT</references>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga449b636c4577c4cefa9d1d6ce476532b" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="104" endline="107">dw_uart_0_isr</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga1e2fe69afd8f659db3f2861f450aedce" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="173" endline="176">dw_uart_1_isr</referencedby>
        <referencedby refid="group___b_o_a_r_d___a_x_s___d_r_v___d_w___u_a_r_t___o_b_j_1ga7c254b0eb89da16f95e9f9d860d7e428" compoundref="axs_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="240" endline="243">dw_uart_2_isr</referencedby>
        <referencedby refid="group___b_o_a_r_d___h_s_d_k___d_r_v___d_w___u_a_r_t___o_b_j_1gad3c6585324fbde1c2ec816eec8567250" compoundref="hsdk_2drivers_2ip_2designware_2uart_2dw__uart__obj_8c" startline="337" endline="340">dw_uart_3_isr</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>DesignWare UART driver implementation based on device hal layer definition (<ref refid="dev__uart_8h" kindref="compound">dev_uart.h</ref>) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>------------------------------------------</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017,<sp/>Synopsys,<sp/>Inc.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without<sp/>modification,</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>1)<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright<sp/>notice,<sp/>this</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>2)<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright<sp/>notice,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>3)<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>Synopsys,<sp/>Inc.,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its<sp/>contributors<sp/>may</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;<sp/>AND</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>HOLDER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment">---------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emb_a_r_c__toolchain_8h" kindref="compound">embARC_toolchain.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="emb_a_r_c__error_8h" kindref="compound">embARC_error.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="arc__exception_8h" kindref="compound">arc_exception.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart__hal_8h" kindref="compound">dw_uart_hal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dw__uart_8h" kindref="compound">dw_uart.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_CHECK_EXP(EXPR,<sp/>ERROR_CODE)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHECK_EXP(EXPR,<sp/>ercd,<sp/>ERROR_CODE,<sp/>error_exit)</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DISABLE_DEVICE_OBJECT_VALID_CHECK</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="63" refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" refkind="member"><highlight class="preprocessor">#define<sp/>VALID_CHK_UART_INFO_OBJECT(uartinfo_obj_ptr)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_CHECK_EXP((uartinfo_obj_ptr)!=NULL,<sp/>E_OBJ);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_CHECK_EXP(((uartinfo_obj_ptr)-&gt;uart_ctrl)!=NULL,<sp/>E_OBJ);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="70" refid="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_BAUD2DIV(perifreq,<sp/>baud)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((perifreq)<sp/>/<sp/>((baud)*16))</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="77" refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_RDY_SND<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1U)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" refkind="member"><highlight class="preprocessor">#define<sp/>DW_UART_RDY_RCV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(2U)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor">const<sp/>uint8_t<sp/>dw_uart_databits[]<sp/>=<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_WORD_LEN5,<sp/>DW_UART_LCR_WORD_LEN6,<sp/>\</highlight></codeline>
<codeline lineno="92"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_WORD_LEN7,<sp/>DW_UART_LCR_WORD_LEN8};</highlight></codeline>
<codeline lineno="93"><highlight class="preprocessor"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>dw_uart_parity[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_PARITY_NONE,<sp/>DW_UART_LCR_PARITY_ODD,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_PARITY_EVEN,<sp/>DW_UART_LCR_PARITY_MASK,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_PARITY_SPACE</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>dw_uart_stopbits[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_1_STOP_BIT,<sp/>DW_UART_LCR_1D5_STOP_BIT,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DW_UART_LCR_2_STOP_BIT</highlight></codeline>
<codeline lineno="101"><highlight class="normal">};</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" kindref="member">dw_uart_putready</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;CPR<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;USR<sp/>&amp;<sp/>DW_UART_USR_TFNF)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;LSR<sp/>&amp;<sp/>DW_UART_LSR_TXD_EMPTY)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" kindref="member">dw_uart_getready</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;CPR<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;USR<sp/>&amp;<sp/>DW_UART_USR_RFNE)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;LSR<sp/>&amp;<sp/>DW_UART_LSR_DR)<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" refkind="member"><highlight class="normal">Inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" kindref="member">dw_uart_putchar</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;DATA<sp/>=<sp/>chr;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" kindref="member">dw_uart_getchar</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(int32_t)uart_reg_ptr-&gt;DATA;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab45a15d2186c5d50f2af6dd2c7b9fa74" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab45a15d2186c5d50f2af6dd2c7b9fa74" kindref="member">dw_uart_snd_chr</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" kindref="member">dw_uart_putready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>chr);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gade34ee9170b5f8580baf8c2c8306c410" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gade34ee9170b5f8580baf8c2c8306c410" kindref="member">dw_uart_rcv_chr</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" refkind="member"><highlight class="normal">Inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" kindref="member">dw_uart_psnd_chr</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" kindref="member">dw_uart_putready</ref>(uart_reg_ptr));<sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>*/</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>chr);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" refkind="member"><highlight class="normal">Inline<sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" kindref="member">dw_uart_prcv_chr</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" kindref="member">dw_uart_getready</ref>(uart_reg_ptr));<sp/></highlight><highlight class="comment">/*<sp/>blocked<sp/>*/</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1899e10572c9f538d78067c6a76f3efe" refkind="member"><highlight class="normal">Inline<sp/>uint32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1899e10572c9f538d78067c6a76f3efe" kindref="member">dw_uart_get_txfifo_len</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>txfifolen;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>uart_cpr;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_cpr<sp/>=<sp/>uart_reg_ptr-&gt;CPR;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_cpr<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txfifolen<sp/>=<sp/>((uart_cpr<sp/>&amp;<sp/>DW_UART_CPR_FIFO_MODE)<sp/>&gt;&gt;<sp/>DW_UART_CPR_FIFO_MODE_OFS)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>txfifolen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>txfifolen;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga60fe4d5fe17acd86d8f98b297b12bfa8" refkind="member"><highlight class="normal">Inline<sp/>uint32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga60fe4d5fe17acd86d8f98b297b12bfa8" kindref="member">dw_uart_get_rxfifo_len</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="200"><highlight class="normal">{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>rxfifolen;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>uart_cpr;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_cpr<sp/>=<sp/>uart_reg_ptr-&gt;CPR;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_cpr<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifolen<sp/>=<sp/>((uart_cpr<sp/>&amp;<sp/>DW_UART_CPR_FIFO_MODE)<sp/>&gt;&gt;<sp/>DW_UART_CPR_FIFO_MODE_OFS)<sp/>&lt;&lt;<sp/>4;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rxfifolen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rxfifolen;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/><ref refid="structuart__dps__format" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>dps_value<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dps<sp/>==<sp/>NULL)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>bits<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dps-&gt;<ref refid="structuart__dps__format_1a8e849d194ac4eeea56b98e0819fde84a" kindref="member">databits</ref><sp/>&lt;<sp/>5)<sp/>||<sp/>(dps-&gt;<ref refid="structuart__dps__format_1a8e849d194ac4eeea56b98e0819fde84a" kindref="member">databits</ref><sp/>&gt;<sp/>8))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>bits<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dps-&gt;<ref refid="structuart__dps__format_1ad2d49c7a22c6028af004d8287389edc7" kindref="member">stopbits</ref><sp/>&gt;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1ggacbd51ac613ec824eeb73a5b6bf743ca6a8408cb794ac8f8e4003fb9e99b4e3b7d" kindref="member">UART_STPBITS_TWO</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parity<sp/>bit<sp/>type<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dps-&gt;<ref refid="structuart__dps__format_1a4eb21acfa64cdd536ee454f21789970c" kindref="member">parity</ref><sp/>&gt;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gga24fd4dba815fc40fbd8e8c37dbf87c7aa9866e632545cc7de127aee8071528030" kindref="member">UART_PARITY_SPACE</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)dw_uart_databits[dps-&gt;<ref refid="structuart__dps__format_1a8e849d194ac4eeea56b98e0819fde84a" kindref="member">databits</ref>-5];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)dw_uart_stopbits[dps-&gt;<ref refid="structuart__dps__format_1ad2d49c7a22c6028af004d8287389edc7" kindref="member">stopbits</ref>];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dps_value<sp/>|=<sp/>(uint32_t)dw_uart_parity[dps-&gt;<ref refid="structuart__dps__format_1a4eb21acfa64cdd536ee454f21789970c" kindref="member">parity</ref>];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>&amp;=<sp/>(~DW_UART_LCR_DPS_MASK);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>dps<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>|=<sp/>dps_value;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/>uint32_t<sp/>baud_divisor)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>enable<sp/>uart<sp/>baudrate<sp/>update<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>|=<sp/>DW_UART_LCR_DLAB;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;DATA<sp/>=<sp/>baud_divisor<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>=<sp/>(baud_divisor&gt;&gt;8)<sp/>&amp;<sp/>0xff;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>&amp;=<sp/>~(DW_UART_LCR_DLAB);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gabb4256ea2b68ef4014313192a73be13f" refkind="member"><highlight class="normal">Inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gabb4256ea2b68ef4014313192a73be13f" kindref="member">dw_uart_software_reset</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;SRR<sp/>=<sp/>DW_UART_SRR_UR|DW_UART_SRR_RFR|DW_UART_SRR_XFR;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(uart_reg_ptr-&gt;USR<sp/>&amp;<sp/>DW_UART_USR_BUSY);<sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>software<sp/>reset<sp/>completed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hwfc<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" kindref="member">UART_FC_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;MCR<sp/>&amp;=<sp/>~(DW_UART_MCR_AFCE|DW_UART_MCR_RTS);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hwfc<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5afc75cc759e85ee277ead4520fb1d0b90" kindref="member">UART_FC_RTS</ref>)<sp/>||<sp/>(hwfc<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;MCR<sp/>|=<sp/>(DW_UART_MCR_AFCE|DW_UART_MCR_RTS);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((hwfc<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a42eb1be010429695afe750de07e7ade6" kindref="member">UART_FC_CTS</ref>)<sp/>||<sp/>(hwfc<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;MCR<sp/>|=<sp/>(DW_UART_MCR_AFCE);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">Inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_uart_set_break(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>|=<sp/>DW_UART_LCR_BREAK;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal">Inline<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dw_uart_clr_break(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr)</highlight></codeline>
<codeline lineno="298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;LCR<sp/>&amp;=<sp/>~DW_UART_LCR_BREAK;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" kindref="member">dw_uart_init</ref>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr,<sp/>uint32_t<sp/>baud_divisor,<sp/><ref refid="structuart__dps__format" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps,<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gabb4256ea2b68ef4014313192a73be13f" kindref="member">dw_uart_software_reset</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(uart_reg_ptr,<sp/>hwfc);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(uart_reg_ptr,<sp/>dps);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>baud_divisor);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IIR<sp/>=<sp/>0x1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>=<sp/>0x0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref>;<sp/>i<sp/>&lt;<sp/>uart_info_ptr-&gt;tx_buf.len;<sp/>i<sp/>++)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" kindref="member">dw_uart_psnd_chr</ref>(uart_reg_ptr,<sp/>p_charbuf[i]);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>transmit<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;CPR<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>until<sp/>transmit<sp/>fifo<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((uart_reg_ptr-&gt;USR<sp/>&amp;<sp/>DW_UART_USR_TFE)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;USR<sp/>&amp;<sp/>DW_UART_USR_BUSY);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr,<sp/>uint32_t<sp/>cbrtn)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cbrtn)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>&amp;=<sp/>~DW_UART_IER_XMIT_EMPTY;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>&amp;=<sp/>~DW_UART_IER_DATA_AVAIL;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/>(<ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>|<ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>))<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref><sp/>!=<sp/>DW_UART_INVALID_INTNO)<sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" kindref="member">int_disable</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;=<sp/>~<ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr,<sp/>uint32_t<sp/>cbrtn)</highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cbrtn)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>|=<sp/>DW_UART_IER_XMIT_EMPTY;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>:</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_reg_ptr-&gt;IER<sp/>|=<sp/>DW_UART_IER_DATA_AVAIL;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/>(<ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>|<ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref><sp/>!=<sp/>DW_UART_INVALID_INTNO)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" kindref="member">int_enable</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga66d7d3cbabaff997b04ede14d386d993" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga66d7d3cbabaff997b04ede14d386d993" kindref="member">dw_uart_enable_interrupt</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref><sp/>!=<sp/>DW_UART_INVALID_INTNO)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" kindref="member">int_handler_install</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>,<sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a21df8fde009f07577bfc55d56ff10a1a" kindref="member">dw_uart_int_handler</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gab709d97aa7dcc618975fc7e8d5860c7f" kindref="member">int_enable</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>|=<sp/><ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>disable<sp/>uart<sp/>interrupt<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref><sp/>!=<sp/>DW_UART_INVALID_INTNO)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___b_o_a_r_d___a_x_s__103___i_n_t_e_r_r_u_p_t_1gaa06cd81d78d066c1cdc46dde7dabeb57" kindref="member">int_disable</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;=<sp/>~(<ref refid="dw__uart_8h_1ac7b6b350d796de899fa93483ca697695" kindref="member">DW_UART_GINT_ENABLE</ref>|<ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>|<ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" kindref="member">dw_uart_enable_device</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" kindref="member">baudrate</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>|=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(<ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr)</highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>0);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;=<sp/>~<ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_1ab16608b3249786f0e0c4282b66bbb64d" kindref="member">DW_UART_TXINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>|=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga80e3a2bfa3fca72a807e59da0bb3b2ee" kindref="member">DEV_IN_TX_ABRT</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;=<sp/>~(<ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga80e3a2bfa3fca72a807e59da0bb3b2ee" kindref="member">DEV_IN_TX_ABRT</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a667ee41c9a8c8ed6dfd8d37271b42d8f" kindref="member">int_status</ref><sp/>&amp;<sp/><ref refid="dw__uart_8h_1a1e495eaace4cbeb5a95407a074be5581" kindref="member">DW_UART_RXINT_ENABLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>|=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga039071faab7f693aff3dc479800073fc" kindref="member">DEV_IN_RX_ABRT</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;=<sp/>~(<ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1ga039071faab7f693aff3dc479800073fc" kindref="member">DEV_IN_RX_ABRT</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="503" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" kindref="member">dw_uart_get_txavail</ref>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>tx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" kindref="member">tx_fifo_len</ref><sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" kindref="member">dw_uart_putready</ref>(uart_reg_ptr)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tx_avail<sp/>=<sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" kindref="member">tx_fifo_len</ref><sp/>-<sp/>uart_reg_ptr-&gt;TFL;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tx_avail;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="521" refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" refkind="member"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" kindref="member">dw_uart_get_rxavail</ref>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>rx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(<ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab28e548352feb3d3bbce7e8f217727ff" kindref="member">rx_fifo_len</ref><sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" kindref="member">dw_uart_getready</ref>(uart_reg_ptr)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rx_avail<sp/>=<sp/>uart_reg_ptr-&gt;RFL;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rx_avail;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="551" refid="dw__uart_8h_1a49c3f35887ad36260c0576c58614db71" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_1a49c3f35887ad36260c0576c58614db71" kindref="member">dw_uart_open</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>baud)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(baud&gt;0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>++;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>opened<sp/>before<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(baud<sp/>==<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" kindref="member">baudrate</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>baudrate<sp/>is<sp/>the<sp/>same<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>open<sp/>with<sp/>different<sp/>baudrate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>baud_divisor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>FIFO<sp/>Length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_reg_ptr-&gt;CPR<sp/>&amp;<sp/>DW_UART_CPR_FIFO_STAT)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" kindref="member">tx_fifo_len</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1899e10572c9f538d78067c6a76f3efe" kindref="member">dw_uart_get_txfifo_len</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab28e548352feb3d3bbce7e8f217727ff" kindref="member">rx_fifo_len</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga60fe4d5fe17acd86d8f98b297b12bfa8" kindref="member">dw_uart_get_rxfifo_len</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab2faf4c7a1a0869f943ce3cbeb925473" kindref="member">tx_fifo_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1ab28e548352feb3d3bbce7e8f217727ff" kindref="member">rx_fifo_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" kindref="member">baudrate</ref><sp/>=<sp/>baud;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baud_divisor<sp/>=<sp/><ref refid="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" kindref="member">DW_UART_BAUD2DIV</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a99f664a7c1dc7d150c3adb68601421b1" kindref="member">dw_apb_bus_freq</ref>,<sp/>baud);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aef7fdb7858a5bb595b5751231af3293d" kindref="member">dps_format</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___f_o_r_m_a_t_1gaeecbb31e8cad9deb3693e9acf6df6f25" kindref="member">dps_format_default</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a2fc66c56990d21e53c3fac977c4e93e0" kindref="member">hwfc</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ga4f722366b7af5439793dc46b8a209fe8" kindref="member">hwfc_default</ref>;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga2e6916f0af485cf8578374b0c6cb95eb" kindref="member">dw_uart_init</ref>(uart_reg_ptr,<sp/>baud_divisor,<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aef7fdb7858a5bb595b5751231af3293d" kindref="member">dps_format</ref>),<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a2fc66c56990d21e53c3fac977c4e93e0" kindref="member">hwfc</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a8f6d0f1edf567943d020122bd61fa1fe" kindref="member">extra</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref><sp/>!=<sp/>DW_UART_INVALID_INTNO)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___a_r_c___h_a_l___e_x_c_e_p_t_i_o_n___i_n_t_e_r_r_u_p_t_1ga92d3c2a8a703078234357e7bce5a5c48" kindref="member">int_handler_install</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a4fdf6dee070321f5299590fc6aa8a3c8" kindref="member">intno</ref>,<sp/>uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a21df8fde009f07577bfc55d56ff10a1a" kindref="member">dw_uart_int_handler</ref>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__uart__cbs" kindref="compound">DEV_UART_CBS</ref>));</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="dw__uart_8h_1a40287dfa053b6bc49bcaf66c35d73b1c" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_1a40287dfa053b6bc49bcaf66c35d73b1c" kindref="member">dw_uart_close</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>--;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab989ee3c9df5d9163650670273df8283" kindref="member">dw_uart_disable_interrupt</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>),<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__uart__cbs" kindref="compound">DEV_UART_CBS</ref>));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a8f6d0f1edf567943d020122bd61fa1fe" kindref="member">extra</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gaa5935765e74b9d1a7e72c9c8f9018b42" kindref="member">E_OPNED</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="662" refid="dw__uart_8h_1aad6c59b900e3f9b72b1eac4ca889f317" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_1aad6c59b900e3f9b72b1eac4ca889f317" kindref="member">dw_uart_control</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/>uint32_t<sp/>ctrl_cmd,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*param)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>val32;<sp/></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>baud_divisor<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref><sp/>*devbuf;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structuart__dps__format" kindref="compound">UART_DPS_FORMAT</ref><sp/>*dps_ptr;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref><sp/>hwfc_local;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>current<sp/>device<sp/>is<sp/>disabled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((ctrl_cmd<sp/>!=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga778353469e5446cd8e540720792e39a8" kindref="member">UART_CMD_ENA_DEV</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl_cmd<sp/>!=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gae7d733241c19376c55bb6873ba39abae" kindref="member">UART_CMD_DIS_DEV</ref>)<sp/>&amp;&amp;<sp/>\</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ctrl_cmd<sp/>!=<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gacf4d94078ba78b978a620c7e6b352736" kindref="member">UART_CMD_GET_STATUS</ref>)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ctrl_cmd)<sp/>{</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga764fa9e43d0e6386328e6123469dfd05" kindref="member">UART_CMD_SET_BAUD</ref>:</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(val32&gt;0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>!=<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" kindref="member">baudrate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baud_divisor<sp/>=<sp/><ref refid="dw__uart_8c_1aee6cb6cbccff7ec5bd4567fdc9153762" kindref="member">DW_UART_BAUD2DIV</ref>(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a99f664a7c1dc7d150c3adb68601421b1" kindref="member">dw_apb_bus_freq</ref>,<sp/>val32);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga80f4fd4e33a6e7758998c8562290a76e" kindref="member">dw_uart_set_baud</ref>(uart_reg_ptr,<sp/>baud_divisor);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ade43cdfba4fbeb94641e9be3453e7ef0" kindref="member">baudrate</ref><sp/>=<sp/>val32;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gacf4d94078ba78b978a620c7e6b352736" kindref="member">UART_CMD_GET_STATUS</ref>:</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param!=NULL)<sp/>&amp;&amp;<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga778353469e5446cd8e540720792e39a8" kindref="member">UART_CMD_ENA_DEV</ref>:</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac84e8d6126193d255334f825885681ae" kindref="member">dw_uart_enable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gae7d733241c19376c55bb6873ba39abae" kindref="member">UART_CMD_DIS_DEV</ref>:</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6dd5da5a303245d2c1a95564d8cbe980" kindref="member">dw_uart_disable_device</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gae4fafef76cb1216e06523779ef842847" kindref="member">UART_CMD_FLUSH_OUTPUT</ref>:</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga296ed0af981331eed09ff311cf9b17e6" kindref="member">dw_uart_flush_output</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga8d2dc24b2777c4ad6ac72350c2d6b6c4" kindref="member">UART_CMD_GET_RXAVAIL</ref>:</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param!=NULL)<sp/>&amp;&amp;<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaac62cb6213fa0e985e4da95ef4270aa2" kindref="member">dw_uart_get_rxavail</ref>(uart_ctrl_ptr);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga3b38c556992512590acd208eda841c2c" kindref="member">UART_CMD_GET_TXAVAIL</ref>:</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>((param!=NULL)<sp/>&amp;&amp;<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*((int32_t<sp/>*)param)<sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gad3d9c1f9d9820d9358be93c1dbc95fe6" kindref="member">dw_uart_get_txavail</ref>(uart_ctrl_ptr);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga1f80b681a44db548672e225872820439" kindref="member">UART_CMD_BREAK_SET</ref>:</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw_uart_set_break(uart_reg_ptr);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga27cc6b038a8cbfb6b04af889d0d4121c" kindref="member">UART_CMD_BREAK_CLR</ref>:</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dw_uart_clr_break(uart_reg_ptr);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga814ea0d0efd24844998b46429c284c9e" kindref="member">UART_CMD_SET_DPS_FORMAT</ref>:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(param!=NULL,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dps_ptr<sp/>=<sp/>(<ref refid="structuart__dps__format" kindref="compound">UART_DPS_FORMAT</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gaacbe47fcc6fd08b7b9aaa0581fd11b8e" kindref="member">dw_uart_set_dps</ref>(uart_reg_ptr,<sp/>dps_ptr)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aef7fdb7858a5bb595b5751231af3293d" kindref="member">dps_format</ref><sp/>=<sp/>*dps_ptr;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga7fac96ac8950657bf84be4086327d708" kindref="member">UART_CMD_SET_HWFC</ref>:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hwfc_local<sp/>=<sp/>(<ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1gaa79a1d08e403b54670b892c0c58d91d5" kindref="member">UART_HW_FLOW_CONTROL</ref>)param;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(((hwfc_local&gt;=<ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a527864f0ec595151e7db5ef909fcf9f0" kindref="member">UART_FC_NONE</ref>)<sp/>&amp;&amp;<sp/>(hwfc_local&lt;=<ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t_1ggaa79a1d08e403b54670b892c0c58d91d5a666090870593651febac7ad9db862760" kindref="member">UART_FC_BOTH</ref>)),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gab528eba58066212798ba5fcedfbfa6de" kindref="member">dw_uart_set_hwfc</ref>(uart_reg_ptr,<sp/>hwfc_local);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a2fc66c56990d21e53c3fac977c4e93e0" kindref="member">hwfc</ref><sp/>=<sp/>hwfc_local;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga0479fa2c6d071ba12b44649df16ad9ae" kindref="member">UART_CMD_SET_TXCB</ref>:</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga18aa857d3b0815ca0235f41e4b6c1067" kindref="member">UART_CMD_SET_RXCB</ref>:</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga7161d329fc09ba91caf8196c949512ce" kindref="member">UART_CMD_SET_ERRCB</ref>:</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a38de0b4956621917a15e6974f9cd6ca4" kindref="member">err_cb</ref><sp/>=<sp/>param;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga96ebb358e1b93a49dffb6fd08ea9d52e" kindref="member">UART_CMD_ABORT_TX</ref>:</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga74b2995571a4daecb84808b56a12e3e0" kindref="member">dw_uart_abort_tx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga091e096b839d8f76f284fc80428f6431" kindref="member">UART_CMD_ABORT_RX</ref>:</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga17cb2aa3d8fa1de710018838f34b2da6" kindref="member">dw_uart_abort_rx</ref>(uart_obj);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gab3644b0ee0991f276c0e4d20d794ac96" kindref="member">UART_CMD_SET_TXINT</ref>:</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga04b7d1f98d6a94c3590677121a853105" kindref="member">UART_CMD_SET_RXINT</ref>:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(uint32_t)param;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val32<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga34b6916c9c6d6336d813a95986d6beac" kindref="member">dw_uart_ena_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1ga45de4c83687e1c2ccb305a5d9c26077a" kindref="member">UART_CMD_SET_TXINT_BUF</ref>:</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devbuf<sp/>=<sp/>(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref><sp/>=<sp/>*devbuf;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group___d_e_v_i_c_e___h_a_l___u_a_r_t___c_t_r_l_c_m_d_1gab41fc9f4e9745c1d30bf3bbd0733ab31" kindref="member">UART_CMD_SET_RXINT_BUF</ref>:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(<ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gace3d588dc25676d080bcf53ee3522d63" kindref="member">CHECK_ALIGN_4BYTES</ref>(param),<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>devbuf<sp/>=<sp/>(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref><sp/>*)param;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref><sp/>=<sp/>*devbuf;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>.<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>.<ref refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>.<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac05cde47c29052935fd39d6d8a6c5ff4" kindref="member">E_NOSPT</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="823" refid="dw__uart_8h_1a66f55a5d83c8d575ff0c2add94e6ec51" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_1a66f55a5d83c8d575ff0c2add94e6ec51" kindref="member">dw_uart_write</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="824"><highlight class="normal">{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(data!=NULL,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(len&gt;0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6b41ca49bf60f21c21e5251d341ac52b" kindref="member">dw_uart_psnd_chr</ref>(uart_reg_ptr,<sp/>p_charbuf[i++]);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="dw__uart_8h_1a9f48bb55260aea46433c78bfd0935c69" refkind="member"><highlight class="normal">int32_t<sp/><ref refid="dw__uart_8c_1a9f48bb55260aea46433c78bfd0935c69" kindref="member">dw_uart_read</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/>uint32_t<sp/>len)</highlight></codeline>
<codeline lineno="862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a3dc91d7432c950b83b6376ab95f0eb8e" kindref="member">opn_cnt</ref><sp/>&gt;<sp/>0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gac4e674c971a46afe82377d02a2d19451" kindref="member">E_CLSED</ref>);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a0d5c787fe766670160806618b2897f9f" kindref="member">status</ref><sp/>&amp;<sp/><ref refid="group___d_e_v_i_c_e___h_a_l___c_o_m_m_o_n___d_e_v_s_t_a_t_u_s_1gaad1f383b0e8eb7feec60f52998730eff" kindref="member">DEV_ENABLED</ref>,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1gae5989e632e687010b35b613304089823" kindref="member">E_SYS</ref>);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(data!=NULL,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a8866d97c5a3a75b78f9feea8446ca1a8" kindref="member">DW_UART_CHECK_EXP</ref>(len&gt;0,<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga28d0303b78b18735ae91a99ecc11bc8e" kindref="member">E_PAR</ref>);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf[i++]<sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1gac53799396d836bfa41b27c469cda6dc7" kindref="member">dw_uart_prcv_chr</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ercd<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ercd;</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="894" refid="dw__uart_8h_1a931f15b8f8a5a29ab3a7344aa3cb10d2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dw__uart_8c_1a931f15b8f8a5a29ab3a7344aa3cb10d2" kindref="member">dw_uart_isr</ref><sp/>(<ref refid="structdev__uart" kindref="compound">DEV_UART</ref><sp/>*uart_obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="895"><highlight class="normal">{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>ercd<sp/>=<sp/><ref refid="group___e_m_b_a_r_c___e_r_r_o_r_1ga1e7cc741c56207a8872ea58373276925" kindref="member">E_OK</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__uart__info" kindref="compound">DEV_UART_INFO</ref><sp/>*uart_info_ptr<sp/>=<sp/>&amp;(uart_obj-&gt;<ref refid="structdev__uart_1a2d149949181bf8ea15253f4523a681d4" kindref="member">uart_info</ref>);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>START<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8c_1a1de405431d52cf3d7375d77bcedb323a" kindref="member">VALID_CHK_UART_INFO_OBJECT</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>END<sp/>OF<sp/>ERROR<sp/>CHECK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>uart_int_status;<sp/></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t<sp/>temp;<sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref><sp/>*buf_ptr;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_charbuf;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL</ref><sp/>*uart_ctrl_ptr<sp/>=<sp/>(<ref refid="structdw__uart__ctrl" kindref="compound">DW_UART_CTRL_PTR</ref>)(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a4cc1288339f8ca3e63fe27a185369695" kindref="member">uart_ctrl</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dw__uart_8h_1ab2543a5370a1cd65365a8829705d0d71" kindref="member">DW_UART_REG</ref><sp/>*uart_reg_ptr<sp/>=<sp/>(DW_UART_REG_PTR)(uart_ctrl_ptr-&gt;<ref refid="structdw__uart__ctrl_1a382ce9e511eba93018a7882c0d913c9a" kindref="member">dw_uart_regbase</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_int_status<sp/>=<sp/>(uart_reg_ptr-&gt;IIR)<sp/>&amp;<sp/>DW_UART_IIR_INT_ID_MASK;</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(uart_int_status)<sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DW_UART_IIR_MDM_STATUS:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;MSR);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DW_UART_IIR_LINE_STATUS:</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a38de0b4956621917a15e6974f9cd6ca4" kindref="member">err_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a38de0b4956621917a15e6974f9cd6ca4" kindref="member">err_cb</ref>(uart_info_ptr);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;LSR);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DW_UART_IIR_XMIT_EMPTY:</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>=<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1aaec9266437298f69cee418419b2af57e" kindref="member">tx_buf</ref>);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf_ptr-&gt;<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p_charbuf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga6a1ca898cfbf0e8a6a0876720cab0deb" kindref="member">dw_uart_putready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga25731a94a23de5006d3d5f1aa27c02aa" kindref="member">dw_uart_putchar</ref>(uart_reg_ptr,<sp/>p_charbuf[buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref>]);</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>++;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>&gt;=<sp/>buf_ptr-&gt;<ref refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ac95bdbdc9b968146b56e2799bed84a09" kindref="member">DW_UART_RDY_SND</ref>);</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>send<sp/>buffer<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(buf_ptr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1a2c385cdfd61f1d7a8f6371935db8e0f1" kindref="member">tx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DW_UART_IIR_RX_TIMEOUT:</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DW_UART_IIR_DATA_AVAIL:</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr<sp/>=<sp/>&amp;(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1a914e6795561013ba36899b1ab6d857fa" kindref="member">rx_buf</ref>);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf_ptr-&gt;<ref refid="structdev__buffer_1a9229a6df77f315674f8a9e08809f97c1" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(p_charbuf<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga1aa5cb38d04f53efd78b152223589b97" kindref="member">dw_uart_getready</ref>(uart_reg_ptr))<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p_charbuf[buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref>]<sp/>=<sp/>(char)<ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga42757531357f3f56ef28a7e6525c4d7b" kindref="member">dw_uart_getchar</ref>(uart_reg_ptr);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>++;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf_ptr-&gt;<ref refid="structdev__buffer_1aa3763537ccb4d9fd5619c2d1647397a6" kindref="member">ofs</ref><sp/>&gt;=<sp/>buf_ptr-&gt;<ref refid="structdev__buffer_1a39df7479eb803d0ca261490f1b2b677d" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___d_e_v_i_c_e___d_w___u_a_r_t___s_t_a_t_i_c_1ga996db08e5110d96068b8bee2f1108bfa" kindref="member">dw_uart_dis_cbr</ref>(uart_info_ptr,<sp/><ref refid="dw__uart_8c_1ad06558b8493c1463445b785e398694aa" kindref="member">DW_UART_RDY_RCV</ref>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>send<sp/>buffer<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(buf_ptr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdev__buffer" kindref="compound">DEV_BUFFER</ref>));</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref>)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uart_info_ptr-&gt;<ref refid="structdev__uart__info_1ae131bbd873bc2eb53c24a1da367a6918" kindref="member">uart_cbs</ref>.<ref refid="structdev__uart__cbs_1af6d1329c648df0d31eb8f8c1a6d7e777" kindref="member">rx_cb</ref>(uart_obj);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>uint32_t)(uart_reg_ptr-&gt;USR);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/qiangg/embarc_osp/device/ip/designware/uart/dw_uart.c"/>
  </compounddef>
</doxygen>
